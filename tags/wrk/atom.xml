<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://qiubo.ink</id>
    <title>小码农博客 • Posts by &#34;wrk&#34; tag</title>
    <link href="http://qiubo.ink" />
    <updated>2023-08-30T13:13:08.000Z</updated>
    <category term="cmder" />
    <category term="git学习" />
    <category term="服务器环境配置mysql" />
    <category term="golang" />
    <category term="mod" />
    <category term="module" />
    <category term="私服" />
    <category term="测试" />
    <category term="string" />
    <category term="linux" />
    <category term="内存" />
    <category term="nodejs" />
    <category term="git" />
    <category term="git版本管理" />
    <category term="Vscode" />
    <category term="常用插件" />
    <category term="编辑器" />
    <category term="npm" />
    <category term="docker" />
    <category term="frp" />
    <category term="网络" />
    <category term="gulp" />
    <category term="前端自动化" />
    <category term="虚拟主机" />
    <category term="mysql" />
    <category term="数据库" />
    <category term="node操作数据库" />
    <category term="josn web token" />
    <category term="jwt" />
    <category term="redis" />
    <category term="并发" />
    <category term="composer" />
    <category term="php管理" />
    <category term="cli" />
    <category term="openresty" />
    <category term="nginx" />
    <category term="lua" />
    <category term="响应式图片" />
    <category term="移动端兼容" />
    <category term="前端" />
    <category term="wrk" />
    <category term="web" />
    <category term="dart" />
    <entry>
        <id>http://qiubo.ink/2023/08/30/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8wrk%E8%BF%9B%E8%A1%8C%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</id>
        <title>学习使用wrk进行压力测试</title>
        <link rel="alternate" href="http://qiubo.ink/2023/08/30/%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8wrk%E8%BF%9B%E8%A1%8C%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
        <content type="html">&lt;p&gt;最近发现了一个新的 HTTP 压力测试工具 &lt;code&gt;wrk&lt;/code&gt;，非常容易上手和使用。&lt;code&gt;wrk&lt;/code&gt; 使用非常简单，对应的命令行参数也不多，但是足够自己简单压测一些 &lt;code&gt;http&lt;/code&gt; 服务了。官方下载地址为 &lt;code&gt;https://github.com/wg/wrk&lt;/code&gt;。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;&lt;img src=&#34;/images/2023-08-30/01.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;根据官方示例，其实 &lt;code&gt;wrk&lt;/code&gt; 最大的特点是支持动态脚本修改请求，本身不大的身体集成了 &lt;code&gt;luajit&lt;/code&gt; 用于实施请求时动态修改请求&amp;#x2F;响应。&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;&lt;a href=&#34;#安装&#34; class=&#34;headerlink&#34; title=&#34;安装&#34;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;h5 id=&#34;Windows&#34;&gt;&lt;a href=&#34;#Windows&#34; class=&#34;headerlink&#34; title=&#34;Windows&#34;&gt;&lt;/a&gt;Windows&lt;/h5&gt;&lt;p&gt;由于wrk依赖的一些特性在Windows上没有，因此&lt;a href=&#34;https://github.com/wg/wrk/issues/187&#34;&gt;不支持&lt;/a&gt;在windows上编译运行，编译成功也会有一些奇怪的问题。因此建议曲线使用，在 docker 中编译, 借助docker在windows上使用。&lt;/p&gt;
&lt;h5 id=&#34;MacOS&#34;&gt;&lt;a href=&#34;#MacOS&#34; class=&#34;headerlink&#34; title=&#34;MacOS&#34;&gt;&lt;/a&gt;MacOS&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;brew install wrk&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;源码安装&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 拉取源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/wg/wrk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# mbp2018 大概编译10分钟&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; wrk &amp;amp;&amp;amp; make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wrk -h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;Linux&#34;&gt;&lt;a href=&#34;#Linux&#34; class=&#34;headerlink&#34; title=&#34;Linux&#34;&gt;&lt;/a&gt;Linux&lt;/h5&gt;&lt;p&gt;源码安装&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 拉取源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; https://github.com/wg/wrk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 编译过程相关依赖可以参照 dockerfile 中的依赖项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; wrk &amp;amp;&amp;amp; make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wrk -h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;Docker安装&#34;&gt;&lt;a href=&#34;#Docker安装&#34; class=&#34;headerlink&#34; title=&#34;Docker安装&#34;&gt;&lt;/a&gt;Docker安装&lt;/h5&gt;&lt;p&gt;Dockerfile内容如下，较少的依赖，编译后无依赖项&lt;/p&gt;
&lt;figure class=&#34;highlight dockerfile&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; ubuntu:latest as BUILD&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; root&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;ADD&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; ./ /root/wrk&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; wrk &amp;amp;&amp;amp; apt update &amp;amp;&amp;amp; apt install make gcc unzip openssl libterm-readkey-perl -y &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;RUN&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; make&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;FROM&lt;/span&gt; ubuntu:latest&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;COPY&lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt; --from=BUILD /root/wrk/wrk /usr/local/bin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;使用介绍&#34;&gt;&lt;a href=&#34;#使用介绍&#34; class=&#34;headerlink&#34; title=&#34;使用介绍&#34;&gt;&lt;/a&gt;使用介绍&lt;/h3&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wrk: invalid option -- h&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Usage: wrk &amp;lt;options&amp;gt; &amp;lt;url&amp;gt;                            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Options:                                            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -c, --connections &amp;lt;N&amp;gt;  Connections to keep open   # 总连接数(客户端数)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -d, --duration    &amp;lt;T&amp;gt;  Duration of test           # 测试运行总时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -t, --threads     &amp;lt;N&amp;gt;  Number of threads to use   # 线程数&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -s, --script      &amp;lt;S&amp;gt;  Load Lua script file       # 执行脚本 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -H, --header      &amp;lt;H&amp;gt;  Add header to request      # 全局请求 header&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --latency          Print latency statistics   # 输出延迟统计信息&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        --timeout     &amp;lt;T&amp;gt;  Socket/request timeout     # 单次请求超时时间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    -v, --version          Print version details      # 版本&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                                      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Numeric arguments may include a SI unit (1k, 1M, 1G) # 数值参数可以包括单位(1K、1M、1G)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Time arguments may include a time unit (2s, 2m, 2h)  # 时间参数可以包括时间单位(2s、2m、2h)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;示例&#34;&gt;&lt;a href=&#34;#示例&#34; class=&#34;headerlink&#34; title=&#34;示例&#34;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;nodejs&lt;/code&gt; 写了一个脚本, 用于测试并发&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;http&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; require(&lt;span class=&#34;string&#34;&gt;&amp;#x27;http&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;port&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; Number(process.argv[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]) || &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;console.log(port);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;type&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;count&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http.createServer((req, res) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (req.url.includes(&lt;span class=&#34;string&#34;&gt;&amp;#x27;status&amp;#x27;&lt;/span&gt;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (req.url.includes(&lt;span class=&#34;string&#34;&gt;&amp;#x27;count&amp;#x27;&lt;/span&gt;)) &amp;#123; &lt;span class=&#34;comment&#34;&gt;// 可以事后统计实际处理的请求数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res.write(`hello $&amp;#123;count&amp;#125;`);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;closed&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 记录请求被取消&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    req.on(&lt;span class=&#34;string&#34;&gt;&amp;#x27;close&amp;#x27;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        closed = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setTimeout(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (closed) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            console.log(&lt;span class=&#34;string&#34;&gt;&amp;#x27;req cancel&amp;#x27;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 最终停止时可能有部分请求被强制取消，作为记录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res.write(`hello $&amp;#123;port&amp;#125;`);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res.statusCode = &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        res.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        count++; &lt;span class=&#34;comment&#34;&gt;// 计数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, Math.random() * &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;// 模拟响应处理延迟&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).listen(port, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(`server is running at $&amp;#123;port&amp;#125;`);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 &lt;code&gt;pm2&lt;/code&gt; 进程管理启动集群服务，多进程方式处理响应&lt;/p&gt;
&lt;p&gt;动态请求脚本内容如下&lt;/p&gt;
&lt;figure class=&#34;highlight lua&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;counter = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;path&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; .. counter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    wrk.headers[&lt;span class=&#34;string&#34;&gt;&amp;quot;X-Counter&amp;quot;&lt;/span&gt;] = counter # 为每次请求头增加叠加数字&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    counter = counter + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; wrk.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;nil&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;path&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;请求示例如下:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ wrk -c 5 -t 5 -s 1280.lua --latency http://127.0.0.1:1280/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Running 10s test @ http://127.0.0.1:1280/   # 默认执行10s&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  5 threads and 5 connections               # 5个线程，一共5个客户端, 平均一个线程作为一个客户端 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Thread Stats   Avg      Stdev     Max     +/- Stdev &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                (平均值)  (标准差)   (最大值)  (正负一个标准差所占比例)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Latency   531.20ms  284.56ms   1.01s    59.34%  (延迟)[主要关注]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Req/Sec     2.44      2.57     10.00    91.95%  (每秒处理中的请求数)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Latency Distribution  (延迟分布)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     50%  576.00ms      # 50%以内的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     75%  777.17ms      # 75%以内的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     90%  914.97ms      # 90%以内的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     99%    1.01s       # 99%以内的请求&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  91 requests in 10.02s, 13.95KB read   (10s之内共处理完成了91个请求，读取了13.95KB数据)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Requests/sec:      9.09     (平均每秒262.22个请求)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Transfer/sec:      1.39KB   (平均每秒读取数据554.27KB)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;参考文章&#34;&gt;&lt;a href=&#34;#参考文章&#34; class=&#34;headerlink&#34; title=&#34;参考文章&#34;&gt;&lt;/a&gt;参考文章&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;https://www.escapelife.site/posts/4b014d0b.html&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://corvo.myseu.cn/2021/03/24/2021-03-24-使用wrk压测并精细控制并发请求量/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://www.taodudu.cc/news/show-5177501.html?action=onClick&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="测试" />
        <category term="lua" />
        <category term="wrk" />
        <updated>2023-08-30T13:13:08.000Z</updated>
    </entry>
</feed>
