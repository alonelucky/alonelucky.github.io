<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://qiubo.ink</id>
    <title>小码农博客 • Posts by &#34;cli&#34; tag</title>
    <link href="http://qiubo.ink" />
    <updated>2018-09-14T12:00:07.000Z</updated>
    <category term="cmder" />
    <category term="git学习" />
    <category term="服务器环境配置mysql" />
    <category term="golang" />
    <category term="mod" />
    <category term="module" />
    <category term="私服" />
    <category term="测试" />
    <category term="string" />
    <category term="linux" />
    <category term="内存" />
    <category term="queue" />
    <category term="笔记" />
    <category term="nats" />
    <category term="nodejs" />
    <category term="git" />
    <category term="git版本管理" />
    <category term="Vscode" />
    <category term="常用插件" />
    <category term="编辑器" />
    <category term="npm" />
    <category term="docker" />
    <category term="frp" />
    <category term="网络" />
    <category term="gulp" />
    <category term="前端自动化" />
    <category term="虚拟主机" />
    <category term="mysql" />
    <category term="数据库" />
    <category term="node操作数据库" />
    <category term="josn web token" />
    <category term="jwt" />
    <category term="redis" />
    <category term="并发" />
    <category term="composer" />
    <category term="php管理" />
    <category term="cli" />
    <category term="openresty" />
    <category term="nginx" />
    <category term="lua" />
    <category term="前端" />
    <category term="响应式图片" />
    <category term="移动端兼容" />
    <category term="wrk" />
    <category term="web" />
    <category term="dart" />
    <category term="算法" />
    <category term="JSON" />
    <category term="XML" />
    <category term="Protobuf" />
    <category term="Msgpack" />
    <category term="CBOR" />
    <entry>
        <id>http://qiubo.ink/2018/09/14/%E4%BD%BF%E7%94%A8nodejs%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</id>
        <title>使用nodejs创建自己的自动化工具</title>
        <link rel="alternate" href="http://qiubo.ink/2018/09/14/%E4%BD%BF%E7%94%A8nodejs%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
        <content type="html">&lt;p&gt;nodejs能方便的进行前端的文件压缩结合等等,自动化操作,但是经常使用的我们,是不是也能方便的建立自己的自动化部署工具呢?比如:经常从头建立的文件夹模式,千篇一律的index.html等等&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;开发步骤&#34;&gt;&lt;a href=&#34;#开发步骤&#34; class=&#34;headerlink&#34; title=&#34;开发步骤&#34;&gt;&lt;/a&gt;开发步骤&lt;/h3&gt;&lt;h6 id=&#34;1-安装nodejs环境&#34;&gt;&lt;a href=&#34;#1-安装nodejs环境&#34; class=&#34;headerlink&#34; title=&#34;1. 安装nodejs环境&#34;&gt;&lt;/a&gt;1. 安装nodejs环境&lt;/h6&gt;&lt;p&gt;从&lt;a href=&#34;https://nodejs.org/&#34;&gt;官网&lt;/a&gt;或&lt;a href=&#34;https://nodejs.cn/&#34;&gt;中文官网&lt;/a&gt;下载nodejs的安装包,参照网上的安装方法安装好nodejs环境,&lt;/p&gt;
&lt;p&gt;此处不是介绍nodejs,,因此不介绍如何安装&lt;/p&gt;
&lt;h6 id=&#34;2-创建项目&#34;&gt;&lt;a href=&#34;#2-创建项目&#34; class=&#34;headerlink&#34; title=&#34;2. 创建项目&#34;&gt;&lt;/a&gt;2. 创建项目&lt;/h6&gt;&lt;p&gt;创建项目文件夹,进入并执行npm init,如下图 &lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/01.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/01.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如下信息是需要填写的 :&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;package name: (jiaocheng)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;version: (1.0.0) 0.1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;description: 自制自动化工具&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;entry point: (index.js)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;command&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git repository:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keywords:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;author: xiaoxia&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;license: (ISC)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在最后生成的package.json中增加一项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;jiaocheng&amp;quot;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;bin为可执行命令,&lt;code&gt;jiaocheng&lt;/code&gt;为执行命令,&lt;code&gt;index.js&lt;/code&gt;为命令执行文件入口&lt;/p&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm &lt;span class=&#34;built_in&#34;&gt;link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/04.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/04.png&#34;&gt;&lt;/a&gt;此命令向系统增加一条软连接(可以理解为快捷方式)引用,方便使用当前项目的 bin 命令(便于本地调试)&lt;/p&gt;
&lt;h6 id=&#34;3-创建index-js-入口文件&#34;&gt;&lt;a href=&#34;#3-创建index-js-入口文件&#34; class=&#34;headerlink&#34; title=&#34;3. 创建index.js,入口文件&#34;&gt;&lt;/a&gt;3. 创建index.js,入口文件&lt;/h6&gt;&lt;p&gt;一定要在顶部加上 &lt;code&gt;#!/usr/bin/env node&lt;/code&gt; 声明,该文件使用环境变量 node 调用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hello world!&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图 :&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/02.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/02.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后打开cmd窗口,输入 &lt;code&gt;jiaocheng&lt;/code&gt; 回车,输出如下图&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/03.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/03.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;4-项目依赖选择&#34;&gt;&lt;a href=&#34;#4-项目依赖选择&#34; class=&#34;headerlink&#34; title=&#34;4. 项目依赖选择&#34;&gt;&lt;/a&gt;4. 项目依赖选择&lt;/h6&gt;&lt;p&gt;此时已经基本成型了,你可以执行命令做一些你想做的事情,也可以自己处理一些 process 变量&lt;/p&gt;
&lt;p&gt;常用的nodejs自带 process属性&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;process.argv		&lt;span class=&#34;comment&#34;&gt;# 	获取传入参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.cwd()		&lt;span class=&#34;comment&#34;&gt;#	获取当前命令执行所在目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.env			&lt;span class=&#34;comment&#34;&gt;#	获取当前系统用户的环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.pid			&lt;span class=&#34;comment&#34;&gt;#	获取当前进程的pid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.platform	&lt;span class=&#34;comment&#34;&gt;#	获取当前运行的平台(系统)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.stdin		&lt;span class=&#34;comment&#34;&gt;#	输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.stdout		&lt;span class=&#34;comment&#34;&gt;# 	输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.versions	&lt;span class=&#34;comment&#34;&gt;#	当前nodejs环境所有版本信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常用模块推荐 (持续更新中):&lt;/p&gt;
&lt;p&gt;commander 	#	作者Tj用于自动生成命令参数获取,单包无依赖&lt;/p&gt;
&lt;p&gt;commander 链接及使用看&lt;a href=&#34;https://npmjs.com/package/commander&#34;&gt;npmjs&lt;/a&gt;介绍或者&lt;a href=&#34;https://github.com/tj/commander.js&#34;&gt;github&lt;/a&gt;介绍即可&lt;/p&gt;
&lt;h3 id=&#34;模块发布&#34;&gt;&lt;a href=&#34;#模块发布&#34; class=&#34;headerlink&#34; title=&#34;模块发布&#34;&gt;&lt;/a&gt;模块发布&lt;/h3&gt;&lt;hr&gt;
&lt;h6 id=&#34;5-注册npmjs账号&#34;&gt;&lt;a href=&#34;#5-注册npmjs账号&#34; class=&#34;headerlink&#34; title=&#34;5. 注册npmjs账号&#34;&gt;&lt;/a&gt;5. 注册npmjs账号&lt;/h6&gt;&lt;p&gt;到&lt;a href=&#34;https://www.npmjs.com/signup&#34;&gt;npmjs官网注册&lt;/a&gt;一个npmjs账号,用于发布自己的模块&lt;/p&gt;
&lt;h6 id=&#34;6-登录npmjs并发布自己的模块&#34;&gt;&lt;a href=&#34;#6-登录npmjs并发布自己的模块&#34; class=&#34;headerlink&#34; title=&#34;6. 登录npmjs并发布自己的模块&#34;&gt;&lt;/a&gt;6. 登录npmjs并发布自己的模块&lt;/h6&gt;&lt;p&gt;模块按照上面的步骤开发,注册过账号后就可以发布自己的模块了,此处的登录不是在网页上的登录,而是在命令行下执行:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会提示输入账号密码,输入注册的账号密码即可&lt;/p&gt;
&lt;p&gt;登录成功后,到项目目录下,执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm publish&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;片刻后便会执行成功&lt;/p&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;部分开发者习惯将npm镜像修改为国内的cnpm.js淘宝镜像,在发布包的时候记得将镜像切换回官方 &lt;a href=&#34;https://registry.npmjs.org/&#34;&gt;https://registry.npmjs.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm config list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看是否替换&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;发布的npm模块名称必须为全小写,不支持大小驼峰名称,一般修改为英文中横线&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="nodejs" />
        <category term="cli" />
        <updated>2018-09-14T12:00:07.000Z</updated>
    </entry>
</feed>
