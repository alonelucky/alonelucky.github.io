{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"json\" tag",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2024/11/14/%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%AF%B9%E6%AF%94/",
            "url": "http://qiubo.ink/2024/11/14/%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E5%AF%B9%E6%AF%94/",
            "title": "编码格式对比",
            "date_published": "2024-11-14T14:22:01.000Z",
            "content_html": "<ul>\n<li>包含自描述信息 <ul>\n<li>JSON </li>\n<li>MessagePack </li>\n<li>CBOR</li>\n<li>XML</li>\n</ul>\n</li>\n<li>不包含自描述信息<ul>\n<li>Protobuf</li>\n</ul>\n</li>\n</ul>\n<span id=\"more\"></span>\n\n<h2 id=\"包含自描述信息\"><a href=\"#包含自描述信息\" class=\"headerlink\" title=\"包含自描述信息\"></a>包含自描述信息</h2><h3 id=\"1-JSON-JavaScript-Object-Notation\"><a href=\"#1-JSON-JavaScript-Object-Notation\" class=\"headerlink\" title=\"1. JSON (JavaScript Object Notation)\"></a>1. JSON (JavaScript Object Notation)</h3><p>JSON格式是1999年ECMA-262的子集合，由 Douglas Crockford 提出。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/bucketio/img16@main/2024/11/14/1731572575398-16d7bc4a-8714-46b4-b47a-0762fb9f7aac.png\"></p>\n<p>基本数据类型：</p>\n<ul>\n<li><strong>数值</strong>：符合IEEE754的十进制数，不能有前导0，可以为负数，可以有小数部分。还可以用e或者E表示指数部分。不能包含非数，如<code>NaN</code>。不区分整数与浮点数。JavaScript用双精度浮点数表示所有数值。</li>\n<li><strong>字符串</strong>：以双引号<code>&quot;&quot;</code>括起来的零个或多个Unicode码位。支持反斜杠开始的转义字符序列。</li>\n<li><strong>布尔值</strong>：表示为 <code>true</code> 或者 <code>false</code>。</li>\n<li><strong>数组</strong>：有序的零个或者多个值。每个值可以为任意类型。数组使用方括号 <code>[]</code> 包裹。多个数组元素之间用逗号 <code>,</code> 分隔，形如：<code>[value, value]</code>。</li>\n<li><strong>对象</strong>：若干无序的“键-值对”，其中键只能是字符串。建议但不强制要求对象中的键是独一无二的。对象以花括号 <code>&#123;&#125;</code> 包裹。多个键-值对之间使用逗号,分隔。键与值之间用冒号 <code>:</code> 分隔。</li>\n<li><strong>空值</strong>：值写为 <code>null</code></li>\n</ul>\n<h5 id=\"优点\"><a href=\"#优点\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ol>\n<li>自描述，人类可阅读性高</li>\n<li>几乎所有与网络开发相关的语言都有JSON函数库。</li>\n</ol>\n<h5 id=\"缺点\"><a href=\"#缺点\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ol>\n<li>整型最大，浮点型最大</li>\n<li>不支持二进制数据</li>\n</ol>\n<h3 id=\"2-MessagePack\"><a href=\"#2-MessagePack\" class=\"headerlink\" title=\"2. MessagePack\"></a>2. MessagePack</h3><p><img src=\"https://fastly.jsdelivr.net/gh/bucketio/img4@main/2024/11/14/1731572437513-5bb35a10-69ed-432f-9cfe-b5fe36c35b31.png\"></p>\n<p>基本数据类型：</p>\n<ul>\n<li><strong>空值</strong>：<code>nil</code></li>\n<li><strong>布尔值</strong>, 表示为 <code>true</code> 或者 <code>false</code>。</li>\n<li><strong>整型</strong>, 最大64位有符号或无符号整数</li>\n<li><strong>浮点型</strong>, IEEE单双精度浮点</li>\n<li><strong>字符串</strong>, UTF-8 字符串</li>\n<li><strong>二进制</strong>, 最大 ($2^{32}-1$)<code>4294967295</code>  字节 </li>\n<li><strong>数组</strong></li>\n<li><strong>对象</strong>, 关系数组</li>\n<li><strong>扩展类型</strong> <code>ext type</code></li>\n<li><strong>时间</strong> ext type &#x3D; -1</li>\n</ul>\n<p>以二进制形式，用于表示简单的数据结构，如数组和关系数组。旨在尽可能紧凑和简单。</p>\n<h5 id=\"优点-1\"><a href=\"#优点-1\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ol>\n<li>编解码自描述</li>\n<li>体积小</li>\n<li>速度快</li>\n<li>支持二进制编码</li>\n</ol>\n<h5 id=\"缺点-1\"><a href=\"#缺点-1\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ol>\n<li>人类可阅读性差</li>\n<li>额外引包 (msgpack 官方提供了多种语言)</li>\n</ol>\n<h3 id=\"3-CBOR-Concise-Binary-Object-Representation\"><a href=\"#3-CBOR-Concise-Binary-Object-Representation\" class=\"headerlink\" title=\"3. CBOR (Concise Binary Object Representation)\"></a>3. CBOR (Concise Binary Object Representation)</h3><p>CBOR的灵感来自Message Pack。<br>一种简洁二进制对象表示格式，其设计目标包括极小的代码体积、相当小的消息体积以及无需版本协商的可扩展性。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/bucketio/img11@main/2024/11/14/1731572810388-4cac6a0f-2324-4486-996b-47b19a8161b6.png\"></p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/bucketio/img14@main/2024/11/14/1731573013926-d2c3b287-41a6-4f8c-9bb4-1628a2af4aeb.png\"></p>\n<h5 id=\"优点-2\"><a href=\"#优点-2\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ol>\n<li>编解码自描述</li>\n<li>体积小</li>\n<li>速度快</li>\n<li>支持二进制编码</li>\n<li>占用资源少</li>\n</ol>\n<h5 id=\"缺点-2\"><a href=\"#缺点-2\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ol>\n<li>人类可阅读性很差</li>\n<li>大部分语言需要依靠第三方实现</li>\n</ol>\n<h3 id=\"4-XML-Extensible-Markup-Language\"><a href=\"#4-XML-Extensible-Markup-Language\" class=\"headerlink\" title=\"4. XML (Extensible Markup Language)\"></a>4. XML (Extensible Markup Language)</h3><p><img src=\"https://fastly.jsdelivr.net/gh/bucketio/img3@main/2024/11/14/1731573326634-766518bc-3694-4183-afe0-f8c611905753.png\"></p>\n<p>可扩展标记语言是一种标记语言和用于存储、传输和重构松散数据的文件格式。它定义了一系列编码文档的规则以使其在人类可读的同时机器可读。万维网联盟于1998年发布的 XML 1.0 规范和其他相关开源标准共同定义了 XML。</p>\n<p>关键术语</p>\n<ul>\n<li><strong>字符（ Character ）</strong></li>\n<li><strong>处理器（ Processor ）与应用（ Application ）</strong></li>\n<li><strong>标记（ Markup ）与内容（ Content ）</strong></li>\n<li><strong>标签（ Tag ）</strong></li>\n<li><strong>元素（ Element ）</strong></li>\n<li><strong>属性（ Attribute ）</strong></li>\n<li><strong>XML 声明（ Declaration ）</strong></li>\n</ul>\n<h5 id=\"优点-3\"><a href=\"#优点-3\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ol>\n<li>编解码自描述，可阅读性高</li>\n<li>易于编写，作为配置文件</li>\n</ol>\n<h5 id=\"缺点-3\"><a href=\"#缺点-3\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ol>\n<li>占用空间大，重复字符多</li>\n<li>结构不灵活</li>\n</ol>\n<h2 id=\"不包含自描述信息\"><a href=\"#不包含自描述信息\" class=\"headerlink\" title=\"不包含自描述信息\"></a>不包含自描述信息</h2><h3 id=\"1-Protobuf-Protocol-Buffers\"><a href=\"#1-Protobuf-Protocol-Buffers\" class=\"headerlink\" title=\"1. Protobuf (Protocol Buffers)\"></a>1. Protobuf (Protocol Buffers)</h3><p>像JSON一样，只是它更小、更快，并且需要生成本地语言绑定。</p>\n<p><img src=\"https://fastly.jsdelivr.net/gh/bucketio/img6@main/2024/11/14/1731574814079-682b9cce-4658-44b6-ade2-b65541f03b7f.png\"></p>\n<h5 id=\"优点-4\"><a href=\"#优点-4\" class=\"headerlink\" title=\"优点\"></a>优点</h5><ol>\n<li>编解码速度快</li>\n<li>占用体积小</li>\n<li>支持二进制编码</li>\n</ol>\n<h5 id=\"缺点-4\"><a href=\"#缺点-4\" class=\"headerlink\" title=\"缺点\"></a>缺点</h5><ol>\n<li>接发双方均需要预定义结构</li>\n</ol>\n<p>基本数据类型：</p>\n<ul>\n<li><strong>double</strong>：双精度浮点</li>\n<li><strong>float</strong>：单精度浮点</li>\n<li><strong>int32</strong>：32位整型，可变长度编码</li>\n<li><strong>int64</strong>：64 位整型，可变长度编码</li>\n<li><strong>uint32</strong>：32位整型，可变长度编码</li>\n<li><strong>uint64</strong>：64 位整型，可变长度编码</li>\n<li><strong>sint32</strong>：比常规 <strong>int32</strong> 更有效地编码负值。</li>\n<li><strong>sint64</strong>：比常规 <strong>int64</strong> 更有效地编码负值。</li>\n<li><strong>fixed32</strong>：固定4字节。如果值通常大于$2^{28}$，则比<strong>uint32</strong>更有效。</li>\n<li><strong>fixed64</strong>：固定8字节。如果值通常大于$2^{56}$，则比<strong>uint32</strong>更有效。</li>\n<li><strong>sfixed32</strong>：固定4字节。</li>\n<li><strong>sfixed64</strong>：固定8字节。</li>\n<li><strong>bool</strong>：布尔值</li>\n<li><strong>string</strong>：字符串</li>\n<li><strong>bytes</strong>：二进制数据</li>\n</ul>\n<h3 id=\"其他类似的格式\"><a href=\"#其他类似的格式\" class=\"headerlink\" title=\"其他类似的格式\"></a>其他类似的格式</h3><h5 id=\"1-Apache-Thrift\"><a href=\"#1-Apache-Thrift\" class=\"headerlink\" title=\"1. Apache Thrift\"></a>1. Apache Thrift</h5><h5 id=\"2-Apache-Avro\"><a href=\"#2-Apache-Avro\" class=\"headerlink\" title=\"2. Apache Avro\"></a>2. Apache Avro</h5><h2 id=\"优缺点\"><a href=\"#优缺点\" class=\"headerlink\" title=\"优缺点\"></a>优缺点</h2><table>\n<thead>\n<tr>\n<th>格式</th>\n<th>标准</th>\n<th>阅读性(0-9)</th>\n<th>易用性(0-9)</th>\n<th>速度(0-9)</th>\n<th>大小(0-9)</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><a href=\"https://www.json.org/json-zh.html\">JSON</a></td>\n<td><a href=\"https://www.ecma-international.org/publications-and-standards/standards/ecma-404/\">ECMA-404</a></td>\n<td>高</td>\n<td>高</td>\n<td>一般</td>\n<td>大</td>\n</tr>\n<tr>\n<td><a href=\"https://msgpack.org/\">MessagePack</a></td>\n<td>-</td>\n<td>中</td>\n<td>高</td>\n<td>快</td>\n<td>中</td>\n</tr>\n<tr>\n<td><a href=\"https://cbor.io/\">CBOR</a></td>\n<td>RFC 8949</td>\n<td>中</td>\n<td>高</td>\n<td>快</td>\n<td>中</td>\n</tr>\n<tr>\n<td><a href=\"https://www.w3.org/XML/\">XML</a></td>\n<td>RFC 7303</td>\n<td>高</td>\n<td>高</td>\n<td>慢</td>\n<td>大</td>\n</tr>\n<tr>\n<td><a href=\"https://protobuf.dev/programming-guides/proto3/\">Protobuf</a></td>\n<td>RFC 7303</td>\n<td>不可阅读</td>\n<td>中</td>\n<td>快</td>\n<td>小</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "算法",
                "JSON",
                "XML",
                "Protobuf",
                "Msgpack",
                "CBOR"
            ]
        }
    ]
}