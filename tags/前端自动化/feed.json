{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"前端自动化\" tag",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2016/12/08/gulp%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "url": "http://qiubo.ink/2016/12/08/gulp%E5%88%9D%E4%BD%93%E9%AA%8C/",
            "title": "gulp初体验",
            "date_published": "2016-12-08T12:09:12.000Z",
            "content_html": "<p>在云IDEcloud9中体验测试了gulp</p>\n<h4 id=\"1-首先npm-install-gulp-g\"><a href=\"#1-首先npm-install-gulp-g\" class=\"headerlink\" title=\"1. 首先npm install gulp -g\"></a>1. 首先npm install gulp -g</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp --save-dev 全局和项目安装gulp</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-测试项目为压缩文件和修改文件名称\"><a href=\"#2-测试项目为压缩文件和修改文件名称\" class=\"headerlink\" title=\"2. 测试项目为压缩文件和修改文件名称\"></a>2. 测试项目为压缩文件和修改文件名称</h4><p>安装gulp依赖项</p>\n<p>| 名称 | 含义 |<br>|gulp-minify|压缩css文件|<br>|gulp-uglify|压缩js文件|<br>|gulp-concat|合并文件|<br>|gulp-rename|修改文件或文件夹名称|</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp-minify --save-dev</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-创建gulpfile-js文件\"><a href=\"#3-创建gulpfile-js文件\" class=\"headerlink\" title=\"3. 创建gulpfile.js文件\"></a>3. 创建gulpfile.js文件</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var gulp = require(&#x27;gulp&#x27;),</span><br><span class=\"line\">    minify = require(&#x27;gulp-minify&#x27;),</span><br><span class=\"line\">    uglify = require(&#x27;gulp-uglify&#x27;),</span><br><span class=\"line\">    concat = require(&#x27;gulp-concat&#x27;),</span><br><span class=\"line\">    rename = require(&#x27;gulp-rename&#x27;);</span><br><span class=\"line\">//获取每个组件</span><br><span class=\"line\"> gulp.task(&#x27;taskName&#x27;,function()&#123;</span><br><span class=\"line\">    return gulp.src(&#x27;./dst/js/*.js&#x27;)               //返回任务操作路径和文件</span><br><span class=\"line\">        .pipe(concat(&#x27;functions.js&#x27;))              //合并所有的js文件为functions.js</span><br><span class=\"line\">        .pipe(gulp.dest(&#x27;./src/js/&#x27;))              //输出functions.js文件到根目录下src下js文件夹</span><br><span class=\"line\">        .pipe(uglify())                            //压缩该文件</span><br><span class=\"line\">        .pipe(rename(&#123;extname:&#x27;.min.js&#x27;&#125;))         //对压缩后的文件进行重命名，修改文件后缀为.min.js</span><br><span class=\"line\">        .pipe(gulp.dest(&#x27;./src/js/&#x27;));             //输出到与未压缩同目录下</span><br><span class=\"line\"> &#125;);//新建一个名字叫taskName的任务</span><br></pre></td></tr></table></figure>\n<h4 id=\"4-文件内容详解：\"><a href=\"#4-文件内容详解：\" class=\"headerlink\" title=\"4. 文件内容详解：\"></a>4. 文件内容详解：</h4><h5 id=\"require-函数：\"><a href=\"#require-函数：\" class=\"headerlink\" title=\"require()函数：\"></a>require()函数：</h5><p>参数为string<br><strong>1. 如果string为内置模块</strong><br>        返回该模块 不再继续执行<br><strong>2. 如果string以文件路径形式（如：’.&#x2F;X’、’..&#x2F;X’ 、’&#x2F;X’）</strong><br>        根据 X 所在的父模块，确定 X 的绝对路径。 将 X 当成文件，依次查找名称为X的文件，只要其中有一个存在，就返回该文件，不再继续执行。 X X.js X.json X.node 将 X 当成目录，依次查找下面文件，只要其中有一个存在，就返回该文件，不再继续执行。 X&#x2F;package.json X&#x2F;index.js X&#x2F;index.json X&#x2F;index.node<br><strong>3. 如果string不带路径</strong><br>        根据 X 所在的父模块，确定 X 可能的安装目录。 依次在每个目录中，将 X 当成文件名或目录名加载。<br>        <a href=\"http://www.ruanyifeng.com/blog/2015/05/require.html\">参考文章1</a><br>        <a href=\"http://www.jdon.com/idea/nodejs/how-require-actually-works.html\">参考文章2</a></p>\n<h5 id=\"gulp-task\"><a href=\"#gulp-task\" class=\"headerlink\" title=\"gulp.task()\"></a>gulp.task()</h5><p>用于创建gulp任务，默认任务名称为<code>default task(&#39;a&#39;,b)</code>; 参数a：指定任务名称 参数b：匿名函数 执行任务时运行 gulp a（默认任务名直接执行 gulp 即可）</p>\n<h5 id=\"gulp-src\"><a href=\"#gulp-src\" class=\"headerlink\" title=\"gulp.src()\"></a>gulp.src()</h5><pre><code>    `gulp.src(globs[, options])`\n    1. `globs` 参数是文件匹配模式(类似正则表达式)，用来匹配文件路径(包括文件名)，当然这里也可以直接指定某个具体的文件路径。当有多个匹配模式时，该参数可以为一个数组。\n    2. `options` 为可选参数。通常情况下我们不需要用到。\n</code></pre>\n<h5 id=\"pipe\"><a href=\"#pipe\" class=\"headerlink\" title=\"pipe()\"></a>pipe()</h5><p><code>node.js</code> 中 <code>stream</code>（流）的指示方向</p>\n<h5 id=\"gulp-dest\"><a href=\"#gulp-dest\" class=\"headerlink\" title=\"gulp.dest()\"></a>gulp.dest()</h5><p><code>gulp.dest()</code> 方法是用来写文件的，其语法为：</p>\n<pre><code>    `gulp.dest(path[,options])`\n    1. path为写入文件的路径\n    2. options为一个可选的参数对象，通常我们不需要用到\n</code></pre>\n<h5 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat()\"></a>concat()</h5><p>合并文件，指定参数为合并后的文件名称</p>\n<h5 id=\"uglify\"><a href=\"#uglify\" class=\"headerlink\" title=\"uglify()\"></a>uglify()</h5><p>压缩文件，没有制定参数，直接压缩js文件</p>\n<h5 id=\"rename\"><a href=\"#rename\" class=\"headerlink\" title=\"rename()\"></a>rename()</h5><p>参数为数组，<code>basename</code>、<code>prefix/suffix</code>、<code>extname</code>、<code>dirname</code> 常用：prefix: ‘pre-‘ 增加前缀pre- suffix: ‘-suf’ 增加后缀，不改变文件性质 extname:’.min.js’ 修改文件后缀 <a href=\"http://www.cnblogs.com/2050/p/4198792.html\">参考文章3</a></p>\n",
            "tags": [
                "nodejs",
                "gulp",
                "前端自动化"
            ]
        }
    ]
}