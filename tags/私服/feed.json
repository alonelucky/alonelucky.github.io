{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"私服\" tag",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2019/03/19/Go%20module%E7%A7%81%E6%9C%8D/",
            "url": "http://qiubo.ink/2019/03/19/Go%20module%E7%A7%81%E6%9C%8D/",
            "title": "Go module 私服",
            "date_published": "2019-03-19T17:00:43.000Z",
            "content_html": "<p>golang 1.11.0 之后 <code>go</code> 提供 mod 内置包管理工具</p>\n<p>但是实际应用时，由于网络等原因造成请求部分网站托管模块时无法响应，导致无法使用，使用ss代理有时又会产生新的问题， 又或者由于依赖过多，致使go mod 网络处理时长过久等原因，于是便有了go mod 私服项目 <a href=\"https://github.com/gomods/athens\">Athens</a></p>\n<span id=\"more\"></span>\n\n<h4 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h4><p>golang 1.11.0 之后 <code>go</code> 提供 mod 内置包管理工具</p>\n<p>但是实际应用时，由于网络等原因造成请求部分网站托管模块时无法响应，导致无法使用，使用ss代理有时又会产生新的问题， 又或者由于依赖过多，致使go mod 网络处理时长过久等原因，于是便有了go mod 私服项目 <a href=\"https://github.com/gomods/athens\">Athens</a></p>\n<h4 id=\"2-服务部署\"><a href=\"#2-服务部署\" class=\"headerlink\" title=\"2. 服务部署\"></a>2. 服务部署</h4><ul>\n<li>拉取代码</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># progromeRoot</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gomods/athens</span><br><span class=\"line\"><span class=\"built_in\">cd</span> athens/cmd/proxy</span><br><span class=\"line\">go install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>检查安装</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$GOPATH</span>/bin/proxy version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>部署 使用任何常用的进程守护工具均可，此处 pm2 实例</li>\n</ul>\n<h6 id=\"默认配置文件端口为3000-3001-有冲突修改配置文件\"><a href=\"#默认配置文件端口为3000-3001-有冲突修改配置文件\" class=\"headerlink\" title=\"默认配置文件端口为3000&#x2F;3001 有冲突修改配置文件\"></a>默认配置文件端口为3000&#x2F;3001 有冲突修改配置文件</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start ./proxy -- -config_file=progromeRoot/config.dev.toml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>(可选)配置nginx 代理</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 简单配置</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name your.domain.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:3000;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-本地使用\"><a href=\"#3-本地使用\" class=\"headerlink\" title=\"3. 本地使用\"></a>3. 本地使用</h4><p>服务配置完成后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">host: http://your.domain.com</span><br><span class=\"line\">port: 80</span><br></pre></td></tr></table></figure>\n<p>修改本地环境变量</p>\n<h6 id=\"go-mod-go-get-使用的代理\"><a href=\"#go-mod-go-get-使用的代理\" class=\"headerlink\" title=\"go mod &#x2F;go get 使用的代理\"></a>go mod &#x2F;go get 使用的代理</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=http://your.domian.com</span><br></pre></td></tr></table></figure>\n<h6 id=\"不需要使用代理的域名\"><a href=\"#不需要使用代理的域名\" class=\"headerlink\" title=\"不需要使用代理的域名\"></a>不需要使用代理的域名</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> NO_PROXY=github.com,<span class=\"variable\">$NO_PROXY</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-小结\"><a href=\"#4-小结\" class=\"headerlink\" title=\"4. 小结\"></a>4. 小结</h4><p>此文是go mod 私服配置简版，该项目支持模块缓存，默认是使用内存，有兴趣的可以自行研究配置</p>\n",
            "tags": [
                "golang",
                "mod",
                "module",
                "私服"
            ]
        }
    ]
}