{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"dart\" tag",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2021/02/20/%E7%94%A8200%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0web%E6%A1%86%E6%9E%B6/",
            "url": "http://qiubo.ink/2021/02/20/%E7%94%A8200%E8%A1%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0web%E6%A1%86%E6%9E%B6/",
            "title": "用200行代码实现web框架",
            "date_published": "2021-02-20T16:58:31.000Z",
            "content_html": "<p>简化的web框架实现, 实现类似express的函数式路由注册, 支持模糊路由匹配, 支持洋葱中间件模型</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>说明: </p>\n<ol>\n<li>无特殊表达式</li>\n<li>移除类型可以直接作为js使用</li>\n</ol>\n</blockquote>\n<p><a href=\"https://github.com/opentoys/baseweb\">已实现多语言</a> <a href=\"https://github.com/opentoys/singleweb\">单文件版</a></p>\n<p>实现前提:</p>\n<ol>\n<li>ts基本语法</li>\n<li>仅依赖内置<code>http</code>库</li>\n<li>利用 <code>Map</code> 实现路由查找</li>\n</ol>\n<p>实现内容:</p>\n<ol>\n<li>基础服务</li>\n<li>路由查找</li>\n<li>上下文处理</li>\n<li>超时处理</li>\n<li>中间件</li>\n<li>错误处理</li>\n</ol>\n<p>核心内容包含3个类:</p>\n<ol>\n<li>Application</li>\n<li>Router</li>\n<li>Context</li>\n</ol>\n<p>1个额外类型定义</p>\n<ol>\n<li><code>type Handler=(ctx: Context) =&gt; void|Promise&lt;void&gt;</code></li>\n</ol>\n<p>特殊语法介绍:</p>\n<ol>\n<li>自定义类型 <code>type a=()=&gt;void</code> </li>\n<li>空值判断 <code>var a = id ?? 0</code></li>\n<li>可选参数 <code>function(a?:any)</code></li>\n<li>解构参数 <code>function(...arr: string[])</code></li>\n</ol>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><h4 id=\"1-Router\"><a href=\"#1-Router\" class=\"headerlink\" title=\"1. Router\"></a>1. Router</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"title class_\">Handler</span>=<span class=\"function\">(<span class=\"params\">ctx: Context</span>) =&gt;</span> <span class=\"title class_\">Promise</span>&lt;<span class=\"built_in\">void</span>&gt; | <span class=\"built_in\">void</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Router</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 默认路由</span></span><br><span class=\"line\">    <span class=\"attr\">uri</span>: <span class=\"built_in\">string</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 子级路由</span></span><br><span class=\"line\">    <span class=\"attr\">childrenRoute</span>:<span class=\"title class_\">Map</span>&lt;<span class=\"built_in\">string</span>, <span class=\"title class_\">Router</span>&gt; = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>&lt;<span class=\"built_in\">string</span>, <span class=\"title class_\">Router</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// 中间件处理函数</span></span><br><span class=\"line\">    <span class=\"attr\">middleware</span>:<span class=\"title class_\">Handler</span>[] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">u: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">uri</span> = u ?? <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 挂载自定义路由</span></span><br><span class=\"line\">    <span class=\"title function_\">hook</span>(<span class=\"params\">r: Router</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">childrenRoute</span>.<span class=\"title function_\">set</span>(r.<span class=\"property\">uri</span>, r);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 挂载中间件</span></span><br><span class=\"line\">    <span class=\"title function_\">use</span>(<span class=\"params\">...a:Handler[]</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">middleware</span>.<span class=\"title function_\">push</span>(...a);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// get请求</span></span><br><span class=\"line\">    <span class=\"title function_\">get</span>(<span class=\"params\">uri: <span class=\"built_in\">string</span>, ...params: Handler[]</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">any</span>(<span class=\"string\">&#x27;GET&#x27;</span>, uri, ...params);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ...</span></span><br><span class=\"line\">    <span class=\"comment\">// 默认路由加载</span></span><br><span class=\"line\">    <span class=\"title function_\">any</span>(<span class=\"params\">method: <span class=\"built_in\">string</span>, uri: <span class=\"built_in\">string</span>, ...handler: Handler[]</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (uri.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;/&#x27;</span>) == <span class=\"number\">0</span>) uri = uri.<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> uris = uri.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"attr\">r</span>: <span class=\"title class_\">Router</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 如果添加的为多级路由, 则拆分挂载</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> u <span class=\"keyword\">of</span> uris) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> nr = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(u);</span><br><span class=\"line\">            r.<span class=\"property\">childrenRoute</span>.<span class=\"title function_\">set</span>(u, nr);</span><br><span class=\"line\">            r = nr;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        r.<span class=\"property\">middleware</span>.<span class=\"title function_\">push</span>(...handler);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> r;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 路由分组</span></span><br><span class=\"line\">    <span class=\"title function_\">group</span>(<span class=\"params\">prefix: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">any</span>(<span class=\"string\">&#x27;ANY&#x27;</span>, prefix);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 分组函数别名</span></span><br><span class=\"line\">    <span class=\"title function_\">prefix</span>(<span class=\"params\">prefix: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">any</span>(<span class=\"string\">&#x27;ANY&#x27;</span>, prefix);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 实现路由查找及执行</span></span><br><span class=\"line\">    <span class=\"title function_\">find</span>(<span class=\"params\">ctx: Context, uris?: <span class=\"built_in\">string</span>[]</span>) &#123;</span><br><span class=\"line\">        uris = uris ?? ctx.<span class=\"property\">url</span>.<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>).<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"attr\">r</span>: <span class=\"title class_\">Router</span>|<span class=\"literal\">null</span> = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\">        ctx.<span class=\"property\">middleware</span>.<span class=\"title function_\">push</span>(...r?.<span class=\"property\">middleware</span> ?? []);</span><br><span class=\"line\">        <span class=\"comment\">// 查询递归执行子路由</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> uris) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">middleware</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 查询下一级路由</span></span><br><span class=\"line\">            r = r?.<span class=\"property\">childrenRoute</span>.<span class=\"title function_\">get</span>(uris[i]) ?? <span class=\"literal\">null</span>;</span><br><span class=\"line\">            ctx.<span class=\"property\">middleware</span>.<span class=\"title function_\">push</span>(...r?.<span class=\"property\">middleware</span> ?? []);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果没有查到最后的路由, 手动添加404处理</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!r) ctx.<span class=\"property\">middleware</span>.<span class=\"title function_\">push</span>(<span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">            ctx.<span class=\"property\">statusCode</span> = <span class=\"number\">404</span>;</span><br><span class=\"line\">            ctx.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Not found&#x27;</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">// 开始依次执行中间件</span></span><br><span class=\"line\">        ctx.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-Application\"><a href=\"#2-Application\" class=\"headerlink\" title=\"2. Application\"></a>2. Application</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 核心app类继承路由, 即为全局根路由</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Router</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">server</span>: http.<span class=\"property\">Server</span>;</span><br><span class=\"line\">    <span class=\"attr\">timeout</span>: <span class=\"built_in\">number</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attr\">errorHandler</span>: <span class=\"function\">(<span class=\"params\">err: <span class=\"built_in\">Error</span>, ctx: Context</span>) =&gt;</span> <span class=\"title class_\">Promise</span>&lt;<span class=\"built_in\">void</span>&gt;;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 初始化根路由</span></span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 默认错误处理函数</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">errorHandler</span> = <span class=\"keyword\">async</span> (err, ctx) =&gt; &#123;</span><br><span class=\"line\">            ctx.<span class=\"property\">statusCode</span> = <span class=\"number\">500</span>;</span><br><span class=\"line\">            ctx.<span class=\"title function_\">send</span>(err.<span class=\"property\">stack</span> ?? <span class=\"string\">&#x27;server error&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 创建服务</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">server</span> = http.<span class=\"title function_\">createServer</span>(<span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 初始化上下文</span></span><br><span class=\"line\">            <span class=\"keyword\">const</span> ctx = <span class=\"keyword\">new</span> <span class=\"title class_\">Context</span>(req, res);</span><br><span class=\"line\">            <span class=\"comment\">// 绑定处理函数</span></span><br><span class=\"line\">            ctx.<span class=\"property\">errorHandler</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">errorHandler</span>;</span><br><span class=\"line\">            <span class=\"comment\">// 设置超时</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">timeout</span> &gt; <span class=\"number\">0</span>) ctx.<span class=\"title function_\">timeout</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">timeout</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 路由查找处理</span></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">find</span>(ctx);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 监听</span></span><br><span class=\"line\">    <span class=\"title function_\">listen</span>(<span class=\"params\">addr: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">server</span>.<span class=\"title function_\">listen</span>(addr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-Context\"><a href=\"#3-Context\" class=\"headerlink\" title=\"3. Context\"></a>3. Context</h4><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> http <span class=\"keyword\">from</span> <span class=\"string\">&#x27;http&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Context</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 原生请求</span></span><br><span class=\"line\">    <span class=\"attr\">request</span>: http.<span class=\"property\">IncomingMessage</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 原生响应</span></span><br><span class=\"line\">    <span class=\"attr\">response</span>: http.<span class=\"property\">ServerResponse</span>;</span><br><span class=\"line\">    <span class=\"attr\">query</span>: <span class=\"built_in\">any</span>;</span><br><span class=\"line\">    <span class=\"attr\">body</span>: <span class=\"built_in\">any</span>;</span><br><span class=\"line\">    <span class=\"attr\">url</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"attr\">method</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 是否已返回请求</span></span><br><span class=\"line\">    <span class=\"attr\">isEnd</span>: <span class=\"built_in\">boolean</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 中间件执行计数</span></span><br><span class=\"line\">    <span class=\"attr\">nextInx</span>: <span class=\"built_in\">number</span> = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 设置响应码</span></span><br><span class=\"line\">    <span class=\"attr\">statusCode</span>:<span class=\"built_in\">number</span> = <span class=\"number\">200</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 当前路由的全部执行函数</span></span><br><span class=\"line\">    <span class=\"attr\">middleware</span>:<span class=\"title class_\">Handler</span>[] = [];</span><br><span class=\"line\">    <span class=\"comment\">// 错误处理</span></span><br><span class=\"line\">    <span class=\"attr\">errorHandler</span>: <span class=\"function\">(<span class=\"params\">err: <span class=\"built_in\">Error</span>, ctx: Context</span>) =&gt;</span> <span class=\"title class_\">Promise</span>&lt;<span class=\"built_in\">void</span>&gt;;</span><br><span class=\"line\">    <span class=\"attr\">responseHeader</span>: <span class=\"title class_\">Map</span>&lt;<span class=\"title class_\">String</span>, <span class=\"built_in\">string</span>&gt; = <span class=\"keyword\">new</span> <span class=\"title class_\">Map</span>&lt;<span class=\"title class_\">String</span>, <span class=\"built_in\">string</span>&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// 初始化上下文</span></span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">req: http.IncomingMessage, res: http.ServerResponse</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">request</span> = req;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span> = res;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">url</span> = req.<span class=\"property\">url</span> ?? <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">method</span> = req.<span class=\"property\">method</span>?.<span class=\"title function_\">toLocaleUpperCase</span>() ?? <span class=\"string\">&quot;GET&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">errorHandler</span> = <span class=\"keyword\">async</span> (err, ctx) =&gt; &#123;&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 超时处理</span></span><br><span class=\"line\">    <span class=\"title function_\">timeout</span>(<span class=\"params\">time: <span class=\"built_in\">number</span></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (time &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">statusCode</span> = <span class=\"number\">500</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;server timeout&quot;</span>);</span><br><span class=\"line\">        &#125;, time);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 下一次执行原理</span></span><br><span class=\"line\">    <span class=\"title function_\">next</span>(<span class=\"params\">info?: <span class=\"built_in\">any</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 如果next有内容, 则证明有显式错误, 及时处理</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (info) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">nextInx</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">middleware</span>.<span class=\"property\">length</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">errorHandler</span>(info, <span class=\"variable language_\">this</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">nextInx</span> += <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 如果计数结束/响应结束, 则终止中间件执行</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">nextInx</span> &gt;= <span class=\"variable language_\">this</span>.<span class=\"property\">middleware</span>.<span class=\"property\">length</span> || <span class=\"variable language_\">this</span>.<span class=\"property\">isEnd</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// 防止中间件错误</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">middleware</span>[<span class=\"variable language_\">this</span>.<span class=\"property\">nextInx</span>](<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">nextInx</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">middleware</span>.<span class=\"property\">length</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"title function_\">errorHandler</span>(err, <span class=\"variable language_\">this</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 响应封装</span></span><br><span class=\"line\">    <span class=\"title function_\">send</span>(<span class=\"params\">str: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isEnd</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;text/plain; charset=utf-8&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> <span class=\"variable language_\">this</span>.<span class=\"property\">responseHeader</span>.<span class=\"title function_\">keys</span>()) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">setHeader</span>(key, <span class=\"variable language_\">this</span>.<span class=\"property\">responseHeader</span>.<span class=\"title function_\">get</span>(key) ?? <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"property\">statusCode</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">statusCode</span> || <span class=\"number\">200</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">write</span>(str);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">end</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">isEnd</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">json</span>(<span class=\"params\">str: <span class=\"built_in\">Object</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">isEnd</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&#x27;Content-Type&#x27;</span>, <span class=\"string\">&#x27;application/json; charset=utf-8&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> <span class=\"variable language_\">this</span>.<span class=\"property\">responseHeader</span>.<span class=\"title function_\">keys</span>()) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">setHeader</span>(key, <span class=\"variable language_\">this</span>.<span class=\"property\">responseHeader</span>.<span class=\"title function_\">get</span>(key) ?? <span class=\"string\">&#x27;&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"property\">statusCode</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">statusCode</span> || <span class=\"number\">200</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">write</span>(str);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">response</span>.<span class=\"title function_\">end</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">isEnd</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">setHeader</span>(<span class=\"params\">key: <span class=\"built_in\">string</span>, value: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">responseHeader</span>.<span class=\"title function_\">set</span>(key, value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">main</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> root = <span class=\"keyword\">new</span> <span class=\"title class_\">Application</span>();</span><br><span class=\"line\">    root.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx)=&gt;&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello middleware&quot;</span>);</span><br><span class=\"line\">        ctx.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> api = root.<span class=\"title function_\">group</span>(<span class=\"string\">&#x27;/api&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    api.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;/user&quot;</span>, <span class=\"function\">(<span class=\"params\">ctx</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello&quot;</span>);</span><br><span class=\"line\">        ctx.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;hello ctx&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">const</span> apiPrefix = api.<span class=\"title function_\">prefix</span>(<span class=\"string\">&quot;/prefix&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 中间件及执行顺序</span></span><br><span class=\"line\">    apiPrefix.<span class=\"title function_\">use</span>(<span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello next&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// ctx.json(`&#123;&quot;status&quot;: 200&#125;`)</span></span><br><span class=\"line\">        ctx.<span class=\"title function_\">next</span>();</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello next end&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 测试执行顺序</span></span><br><span class=\"line\">    apiPrefix.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;/hello&quot;</span>, <span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello prefix start&quot;</span>);</span><br><span class=\"line\">        ctx.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;hello prefix ctx&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello prefix end&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 测试超时</span></span><br><span class=\"line\">    apiPrefix.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;/timeout&quot;</span>, <span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello timeout start&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 测试错误捕获</span></span><br><span class=\"line\">    apiPrefix.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;/error&quot;</span>, <span class=\"keyword\">async</span> (ctx) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hello error start&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 测试hook</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> r = <span class=\"keyword\">new</span> <span class=\"title class_\">Router</span>(<span class=\"string\">&quot;hello&quot;</span>);</span><br><span class=\"line\">    root.<span class=\"title function_\">hook</span>(r);</span><br><span class=\"line\">    </span><br><span class=\"line\">    root.<span class=\"property\">errorHandler</span> = <span class=\"keyword\">async</span> (err, ctx) =&gt; &#123;</span><br><span class=\"line\">        ctx.<span class=\"property\">statusCode</span> = <span class=\"number\">500</span>;</span><br><span class=\"line\">        ctx.<span class=\"title function_\">send</span>(<span class=\"string\">&quot;server hello error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    root.<span class=\"title function_\">listen</span>(<span class=\"string\">&#x27;12345&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">main</span>();</span><br></pre></td></tr></table></figure>",
            "tags": [
                "golang",
                "nodejs",
                "web",
                "dart"
            ]
        }
    ]
}