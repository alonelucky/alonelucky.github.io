<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>小码农博客 • Posts by &#34;nodejs&#34; category</title>
        <link>http://qiubo.ink</link>
        <description></description>
        <language>ZH-cn</language>
        <pubDate>Thu, 16 Mar 2023 10:45:34 +0000</pubDate>
        <lastBuildDate>Thu, 16 Mar 2023 10:45:34 +0000</lastBuildDate>
        <category>cmder</category>
        <category>git学习</category>
        <category>服务器环境配置mysql</category>
        <category>golang</category>
        <category>mod</category>
        <category>module</category>
        <category>私服</category>
        <category>测试</category>
        <category>string</category>
        <category>linux</category>
        <category>内存</category>
        <category>queue</category>
        <category>笔记</category>
        <category>nats</category>
        <category>nodejs</category>
        <category>git</category>
        <category>git版本管理</category>
        <category>Vscode</category>
        <category>常用插件</category>
        <category>编辑器</category>
        <category>npm</category>
        <category>docker</category>
        <category>frp</category>
        <category>网络</category>
        <category>gulp</category>
        <category>前端自动化</category>
        <category>虚拟主机</category>
        <category>mysql</category>
        <category>数据库</category>
        <category>node操作数据库</category>
        <category>josn web token</category>
        <category>jwt</category>
        <category>redis</category>
        <category>并发</category>
        <category>composer</category>
        <category>php管理</category>
        <category>cli</category>
        <category>openresty</category>
        <category>nginx</category>
        <category>lua</category>
        <category>前端</category>
        <category>响应式图片</category>
        <category>移动端兼容</category>
        <category>wrk</category>
        <category>web</category>
        <category>dart</category>
        <category>算法</category>
        <category>JSON</category>
        <category>XML</category>
        <category>Protobuf</category>
        <category>Msgpack</category>
        <category>CBOR</category>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2023/03/16/Nodejs-v19-x-%E6%94%AF%E6%8C%81%E6%89%93%E5%8C%85%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%8D%95%E6%96%87%E4%BB%B6/</guid>
            <title>Nodejs v19.x 支持打包可执行单文件</title>
            <link>http://qiubo.ink/2023/03/16/Nodejs-v19-x-%E6%94%AF%E6%8C%81%E6%89%93%E5%8C%85%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%8D%95%E6%96%87%E4%BB%B6/</link>
            <category>nodejs</category>
            <pubDate>Thu, 16 Mar 2023 10:45:34 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;官方文档：&lt;a href=&#34;https://nodejs.org/dist/latest-v19.x/docs/api/single-executable-applications.html&#34;&gt;Single executable applications&lt;/a&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;特性介绍：&#34;&gt;&lt;a href=&#34;#特性介绍：&#34; class=&#34;headerlink&#34; title=&#34;特性介绍：&#34;&gt;&lt;/a&gt;特性介绍：&lt;/h2&gt;&lt;p&gt;有的语言原生工具链就支持打包单独可执行文件，如：&lt;code&gt;go build&lt;/code&gt; &lt;code&gt;dart complite exe&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;有的有社区解决方案，如：&lt;code&gt;PyInstaller&lt;/code&gt; nodejs社区的：&lt;a href=&#34;https://github.com/vercel/ncc&#34;&gt;&lt;code&gt;ncc&lt;/code&gt;&lt;/a&gt;&amp;#x2F;&lt;a href=&#34;https://github.com/vercel/pkg&#34;&gt;&lt;code&gt;pkg&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如今，nodejs 在 v19.x 引入实验性单独可执行文件，提供了官方打包工具链。&lt;/p&gt;
&lt;h2 id=&#34;使用&#34;&gt;&lt;a href=&#34;#使用&#34; class=&#34;headerlink&#34; title=&#34;使用&#34;&gt;&lt;/a&gt;使用&lt;/h2&gt;&lt;p&gt;基础环境：安装 Nodejs v19.x 及以上，只有最新版本支持&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#  1.创建 js 文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;console.log(`Hello, $&amp;#123;process.argv[2]&amp;#125;!`);&amp;#x27;&lt;/span&gt; &amp;gt; hello.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 2. 复制当前版本的 node 二进制文件到当前目录，并重命名为想要的二进制名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; $(&lt;span class=&#34;built_in&#34;&gt;which&lt;/span&gt; node) hello&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3. 进行打包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npx postject hello NODE_JS_CODE hello.js \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --macho-segment-name NODE_JS &lt;span class=&#34;comment&#34;&gt;# 最后一行只有 macos 需要&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4. 运行可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Hello, world!&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上是官方示例，通过第三步可以看出，实际上是 &lt;a href=&#34;https://github.com/nodejs/postject&#34;&gt;&lt;code&gt;postject&lt;/code&gt;&lt;/a&gt; 在起作用, 可以自行安装使用&lt;/p&gt;
&lt;h2 id=&#34;应用&#34;&gt;&lt;a href=&#34;#应用&#34; class=&#34;headerlink&#34; title=&#34;应用&#34;&gt;&lt;/a&gt;应用&lt;/h2&gt;&lt;p&gt;目前只能打包一个 js 文件， 与 pkg 是打包一整个文件夹不同，是否就不能应用了呢？顺势可以想到把整个项目打包为单独的 js 文件不就解决了这个问题了吗？这便是 ncc（Compile a Node.js project into a single file. Supports TypeScript, binary addons, dynamic requires.）, 尝试一下。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mkdir&lt;/span&gt; singleapp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 初始化项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm i -S express&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ...创建多文件文件夹及相互依赖&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 ncc 打包单文件， dist/index.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ncc build app.js -o dist&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 复制当前版本的 node 二进制文件到当前目录，并重命名为想要的二进制名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cp&lt;/span&gt; $(&lt;span class=&#34;built_in&#34;&gt;which&lt;/span&gt; node) singleapp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 3. 进行打包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npx postject singleapp NODE_JS_CODE dist/index.js \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    --macho-segment-name NODE_JS &lt;span class=&#34;comment&#34;&gt;# 最后一行只有 macos 需要&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 4. 运行可执行文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./singleapp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;server is running at 127.0.0.1:3000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;由于打包了 nodevm 所以生成的二进制文件会比较大，单文件打包结果是 83Mb，但是 node 二进制原包是 90MB，应该是有压缩，可以使用 &lt;code&gt;upx&lt;/code&gt; 进行二进制加壳压缩。&lt;/p&gt;
&lt;h2 id=&#34;结言&#34;&gt;&lt;a href=&#34;#结言&#34; class=&#34;headerlink&#34; title=&#34;结言&#34;&gt;&lt;/a&gt;结言&lt;/h2&gt;&lt;p&gt;Nodejs 多年呼吁的打包功能官方终于开始启动了，还有一些瑕疵，而且实验性功能改动到后边会比较大，可以多多跟进，目前的官方讨论区在&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodejs/single-executable/discussions&#34;&gt;讨论区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nodejs/node/issues/43432&#34;&gt;Initiative: Single Executable Application #43432&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以前社区百花齐放提供了很多的打包方案，&lt;code&gt;pkg&lt;/code&gt;, &lt;code&gt;jsexe&lt;/code&gt;, &lt;code&gt;ncc&lt;/code&gt;, &lt;code&gt;bytecode&lt;/code&gt; 等等，其实 &lt;code&gt;webpack&lt;/code&gt; 这些也是可以支持后端项目打包的，也可以打包合并为单独 js 文件，复用 js 打包生态，源码混淆，sourcemap 支持等等&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2018/09/14/%E4%BD%BF%E7%94%A8nodejs%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</guid>
            <title>使用nodejs创建自己的自动化工具</title>
            <link>http://qiubo.ink/2018/09/14/%E4%BD%BF%E7%94%A8nodejs%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</link>
            <category>nodejs</category>
            <category>cli</category>
            <pubDate>Fri, 14 Sep 2018 12:00:07 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;nodejs能方便的进行前端的文件压缩结合等等,自动化操作,但是经常使用的我们,是不是也能方便的建立自己的自动化部署工具呢?比如:经常从头建立的文件夹模式,千篇一律的index.html等等&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;开发步骤&#34;&gt;&lt;a href=&#34;#开发步骤&#34; class=&#34;headerlink&#34; title=&#34;开发步骤&#34;&gt;&lt;/a&gt;开发步骤&lt;/h3&gt;&lt;h6 id=&#34;1-安装nodejs环境&#34;&gt;&lt;a href=&#34;#1-安装nodejs环境&#34; class=&#34;headerlink&#34; title=&#34;1. 安装nodejs环境&#34;&gt;&lt;/a&gt;1. 安装nodejs环境&lt;/h6&gt;&lt;p&gt;从&lt;a href=&#34;https://nodejs.org/&#34;&gt;官网&lt;/a&gt;或&lt;a href=&#34;https://nodejs.cn/&#34;&gt;中文官网&lt;/a&gt;下载nodejs的安装包,参照网上的安装方法安装好nodejs环境,&lt;/p&gt;
&lt;p&gt;此处不是介绍nodejs,,因此不介绍如何安装&lt;/p&gt;
&lt;h6 id=&#34;2-创建项目&#34;&gt;&lt;a href=&#34;#2-创建项目&#34; class=&#34;headerlink&#34; title=&#34;2. 创建项目&#34;&gt;&lt;/a&gt;2. 创建项目&lt;/h6&gt;&lt;p&gt;创建项目文件夹,进入并执行npm init,如下图 &lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/01.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/01.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;如下信息是需要填写的 :&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;package name: (jiaocheng)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;version: (1.0.0) 0.1.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;description: 自制自动化工具&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;entry point: (index.js)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;command&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git repository:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;keywords:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;author: xiaoxia&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;license: (ISC)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在最后生成的package.json中增加一项&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;bin&amp;quot;&lt;/span&gt;:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;jiaocheng&amp;quot;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;index.js&amp;quot;&lt;/span&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;bin为可执行命令,&lt;code&gt;jiaocheng&lt;/code&gt;为执行命令,&lt;code&gt;index.js&lt;/code&gt;为命令执行文件入口&lt;/p&gt;
&lt;p&gt;然后执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm &lt;span class=&#34;built_in&#34;&gt;link&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/04.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/04.png&#34;&gt;&lt;/a&gt;此命令向系统增加一条软连接(可以理解为快捷方式)引用,方便使用当前项目的 bin 命令(便于本地调试)&lt;/p&gt;
&lt;h6 id=&#34;3-创建index-js-入口文件&#34;&gt;&lt;a href=&#34;#3-创建index-js-入口文件&#34; class=&#34;headerlink&#34; title=&#34;3. 创建index.js,入口文件&#34;&gt;&lt;/a&gt;3. 创建index.js,入口文件&lt;/h6&gt;&lt;p&gt;一定要在顶部加上 &lt;code&gt;#!/usr/bin/env node&lt;/code&gt; 声明,该文件使用环境变量 node 调用&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hello world!&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如图 :&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/02.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/02.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后打开cmd窗口,输入 &lt;code&gt;jiaocheng&lt;/code&gt; 回车,输出如下图&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/03.png&#34;&gt;&lt;img src=&#34;https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/03.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&#34;4-项目依赖选择&#34;&gt;&lt;a href=&#34;#4-项目依赖选择&#34; class=&#34;headerlink&#34; title=&#34;4. 项目依赖选择&#34;&gt;&lt;/a&gt;4. 项目依赖选择&lt;/h6&gt;&lt;p&gt;此时已经基本成型了,你可以执行命令做一些你想做的事情,也可以自己处理一些 process 变量&lt;/p&gt;
&lt;p&gt;常用的nodejs自带 process属性&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;process.argv		&lt;span class=&#34;comment&#34;&gt;# 	获取传入参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.cwd()		&lt;span class=&#34;comment&#34;&gt;#	获取当前命令执行所在目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.env			&lt;span class=&#34;comment&#34;&gt;#	获取当前系统用户的环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.pid			&lt;span class=&#34;comment&#34;&gt;#	获取当前进程的pid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.platform	&lt;span class=&#34;comment&#34;&gt;#	获取当前运行的平台(系统)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.stdin		&lt;span class=&#34;comment&#34;&gt;#	输入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.stdout		&lt;span class=&#34;comment&#34;&gt;# 	输出&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;process.versions	&lt;span class=&#34;comment&#34;&gt;#	当前nodejs环境所有版本信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常用模块推荐 (持续更新中):&lt;/p&gt;
&lt;p&gt;commander 	#	作者Tj用于自动生成命令参数获取,单包无依赖&lt;/p&gt;
&lt;p&gt;commander 链接及使用看&lt;a href=&#34;https://npmjs.com/package/commander&#34;&gt;npmjs&lt;/a&gt;介绍或者&lt;a href=&#34;https://github.com/tj/commander.js&#34;&gt;github&lt;/a&gt;介绍即可&lt;/p&gt;
&lt;h3 id=&#34;模块发布&#34;&gt;&lt;a href=&#34;#模块发布&#34; class=&#34;headerlink&#34; title=&#34;模块发布&#34;&gt;&lt;/a&gt;模块发布&lt;/h3&gt;&lt;hr&gt;
&lt;h6 id=&#34;5-注册npmjs账号&#34;&gt;&lt;a href=&#34;#5-注册npmjs账号&#34; class=&#34;headerlink&#34; title=&#34;5. 注册npmjs账号&#34;&gt;&lt;/a&gt;5. 注册npmjs账号&lt;/h6&gt;&lt;p&gt;到&lt;a href=&#34;https://www.npmjs.com/signup&#34;&gt;npmjs官网注册&lt;/a&gt;一个npmjs账号,用于发布自己的模块&lt;/p&gt;
&lt;h6 id=&#34;6-登录npmjs并发布自己的模块&#34;&gt;&lt;a href=&#34;#6-登录npmjs并发布自己的模块&#34; class=&#34;headerlink&#34; title=&#34;6. 登录npmjs并发布自己的模块&#34;&gt;&lt;/a&gt;6. 登录npmjs并发布自己的模块&lt;/h6&gt;&lt;p&gt;模块按照上面的步骤开发,注册过账号后就可以发布自己的模块了,此处的登录不是在网页上的登录,而是在命令行下执行:&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm login&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;会提示输入账号密码,输入注册的账号密码即可&lt;/p&gt;
&lt;p&gt;登录成功后,到项目目录下,执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm publish&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;片刻后便会执行成功&lt;/p&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a href=&#34;#注意事项&#34; class=&#34;headerlink&#34; title=&#34;注意事项&#34;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;部分开发者习惯将npm镜像修改为国内的cnpm.js淘宝镜像,在发布包的时候记得将镜像切换回官方 &lt;a href=&#34;https://registry.npmjs.org/&#34;&gt;https://registry.npmjs.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以执行&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm config list&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看是否替换&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;发布的npm模块名称必须为全小写,不支持大小驼峰名称,一般修改为英文中横线&lt;/li&gt;
&lt;/ol&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2018/09/14/nodejs%E5%AE%9E%E7%8E%B0%E5%9F%BA%E7%A1%80%E7%9A%84jwt/</guid>
            <title>nodejs实现基础的jwt</title>
            <link>http://qiubo.ink/2018/09/14/nodejs%E5%AE%9E%E7%8E%B0%E5%9F%BA%E7%A1%80%E7%9A%84jwt/</link>
            <category>josn web token</category>
            <category>jwt</category>
            <pubDate>Fri, 14 Sep 2018 11:57:03 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;手动实现 &lt;code&gt;JSON Web Token&lt;/code&gt; 了解 token 验证基本原理&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;使用模块,nodejs原生模块&lt;br&gt;Crypto&lt;/p&gt;
&lt;h3 id=&#34;1-实现机制&#34;&gt;&lt;a href=&#34;#1-实现机制&#34; class=&#34;headerlink&#34; title=&#34;1. 实现机制&#34;&gt;&lt;/a&gt;1. 实现机制&lt;/h3&gt;&lt;p&gt;JSON Web Token 由三部分组成，头部（Header）、载荷（Payload）与签名（Signature），并由 &lt;code&gt;.&lt;/code&gt; 英文点拼接。&lt;/p&gt;
&lt;h6 id=&#34;1-Header&#34;&gt;&lt;a href=&#34;#1-Header&#34; class=&#34;headerlink&#34; title=&#34;1. Header&#34;&gt;&lt;/a&gt;1. Header&lt;/h6&gt;&lt;p&gt;生成jwt头部,声明其类型以及签名所用的算法等的JSON格式,并将其进行base64转码&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let jwtHeader = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    typ:&amp;#x27;JWT&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    alg:&amp;#x27;SHA256&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jwtHeader = Buffer.from(JSON.stringify(jwtHeader)).toString(&amp;#x27;base64&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// base64&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;2-Payload&#34;&gt;&lt;a href=&#34;#2-Payload&#34; class=&#34;headerlink&#34; title=&#34;2. Payload&#34;&gt;&lt;/a&gt;2. Payload&lt;/h6&gt;&lt;p&gt;生成jwt载荷部分,并将其进行base64转码&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;iss: 该JWT的签发者，是否使用是可选的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sub: 该JWT所面向的用户，是否使用是可选的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;aud: 接收该JWT的一方，是否使用是可选的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;exp(expires): 什么时候过期，这里是一个Unix时间戳，是否使用是可选的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;iat(issued at): 在什么时候签发的(UNIX时间)，是否使用是可选的；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;nbf (Not Before)：如果当前时间在nbf里的时间之前，则Token不被接受；一般都会留一些余地，比如几分钟；，是否使用是可选的；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let jwtPayload = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        userId: 123456&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exp: &amp;#x27;2018-08-01&amp;#x27;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;jwtPayload = Buffer.from(JSON.stringify(jwtPayload)).toString(&amp;#x27;base64&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;3-Signature&#34;&gt;&lt;a href=&#34;#3-Signature&#34; class=&#34;headerlink&#34; title=&#34;3. Signature&#34;&gt;&lt;/a&gt;3. Signature&lt;/h6&gt;&lt;p&gt;将上面的两个编码后的字符串都用句号.连接在一起（头部在前）,并使用sha256及secret对其进行签名处理&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;const crypto = require(&amp;#x27;crypto&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let jwtStr = jwtHeader + &amp;#x27;.&amp;#x27; + jwtPayload;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let jwtSignature = crypto.createHmac(&amp;#x27;sha256&amp;#x27;,&amp;#x27;my secret&amp;#x27;).update(jwtStr).digest(&amp;#x27;base64&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;4-jwt&#34;&gt;&lt;a href=&#34;#4-jwt&#34; class=&#34;headerlink&#34; title=&#34;4. jwt&#34;&gt;&lt;/a&gt;4. jwt&lt;/h6&gt;&lt;p&gt;将三个部分连接即组成了完整的jwt&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;let jwtToken = jwtHeader + &amp;#x27;.&amp;#x27; + jwtPayload + &amp;#x27;.&amp;#x27; + jwtSignature;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-jwt解析&#34;&gt;&lt;a href=&#34;#2-jwt解析&#34; class=&#34;headerlink&#34; title=&#34;2. jwt解析&#34;&gt;&lt;/a&gt;2. jwt解析&lt;/h3&gt;&lt;p&gt;处理生成 &lt;code&gt;jwt&lt;/code&gt; 是需要使用的，生成如上，解析自然也就比较简单&lt;/p&gt;
&lt;h6 id=&#34;1-校验签名&#34;&gt;&lt;a href=&#34;#1-校验签名&#34; class=&#34;headerlink&#34; title=&#34;1. 校验签名&#34;&gt;&lt;/a&gt;1. 校验签名&lt;/h6&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;// 拆分jwt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let jwtArr = jwtToken.split(&amp;#x27;.&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// 根据头部和载荷验证签名是否匹配&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let checkToken = crypto.createHmac(&amp;#x27;sha256&amp;#x27;,&amp;#x27;my secret&amp;#x27;).update(jwtArr[0]+&amp;#x27;.&amp;#x27;+jwtArr[1]).digest(&amp;#x27;base64&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;checkToken ?= jwtArr[2]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6 id=&#34;2-解析数据&#34;&gt;&lt;a href=&#34;#2-解析数据&#34; class=&#34;headerlink&#34; title=&#34;2. 解析数据&#34;&gt;&lt;/a&gt;2. 解析数据&lt;/h6&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;//　校验签名通过，解析载荷的base64数据&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;let jwtPayload = JSON.parse(Buffer.from(jwtArr[1],&amp;#x27;base64&amp;#x27;).toString())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2017/09/14/Verdaccio%E6%90%AD%E5%BB%BAnpm%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</guid>
            <title>Verdaccio 搭建npm私有仓库</title>
            <link>http://qiubo.ink/2017/09/14/Verdaccio%E6%90%AD%E5%BB%BAnpm%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</link>
            <category>npm</category>
            <pubDate>Thu, 14 Sep 2017 11:56:01 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;使用Nodejs的过程中未免会遇到公司项目私有化开发，此时需要一些私有模块的发布和使用，&lt;code&gt;npmjs&lt;/code&gt;的私有仓库是付费的功能,&lt;code&gt;cnpm&lt;/code&gt;本地搭建又偏重，&lt;code&gt;verdaccio&lt;/code&gt;项目刚好满足，轻量私有部署简单&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;由于&lt;code&gt;sinopia&lt;/code&gt;项目不再维护,故选取fork项目&lt;code&gt;verdaccio&lt;/code&gt;进行搭建,使用方法一样,仅仅将&lt;code&gt;sinopia&lt;/code&gt;换为&lt;code&gt;verdaccio&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;环境依赖&lt;/p&gt;
&lt;p&gt;python 2.7.x&lt;br&gt;node-gyp&lt;/p&gt;
&lt;h3 id=&#34;1-安装verdaccio&#34;&gt;&lt;a href=&#34;#1-安装verdaccio&#34; class=&#34;headerlink&#34; title=&#34;1. 安装verdaccio&#34;&gt;&lt;/a&gt;1. 安装verdaccio&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm i -g verdaccio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;配置文件 ~/.config/verdaccio/config.yaml&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 存放位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;storage: ./npmdata&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 认证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;auth:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	htpasswd:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		file:./authpasswd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		max_users:10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 抓取镜像源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uplinks&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	npmjs:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		url:http://registry.npm.taobao.org/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# package&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;packages:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;@*/*&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		access:&lt;span class=&#34;variable&#34;&gt;$all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		publish:&lt;span class=&#34;variable&#34;&gt;$authenticated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		access:&lt;span class=&#34;variable&#34;&gt;$all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		publish:&lt;span class=&#34;variable&#34;&gt;$authenticated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 日志&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;logs:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	- &amp;#123;&lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;:stdout,format:pretty,level:http,path:./npm.log&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 监听端口(默认没有这个选项监听4873端口)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;listen:	0.0.0.0:4433&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;2-启动项目&#34;&gt;&lt;a href=&#34;#2-启动项目&#34; class=&#34;headerlink&#34; title=&#34;2. 启动项目&#34;&gt;&lt;/a&gt;2. 启动项目&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;默认启动&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;verdaccio&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认加载 ~/.config/verdaccio/config.yaml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认监听&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认存储位置 ~/.config/verdaccio/storage/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 默认账号密码存放位置 ~/.config/verdaccio/htpasswd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;终端命令启动&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;verdaccio -l 端口 -c 配置文件位置&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;pm2进程守护&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pm2 start `&lt;span class=&#34;built_in&#34;&gt;which&lt;/span&gt; verdaccio` --name &lt;span class=&#34;string&#34;&gt;&amp;quot;local_npm&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-项目使用&#34;&gt;&lt;a href=&#34;#3-项目使用&#34; class=&#34;headerlink&#34; title=&#34;3. 项目使用&#34;&gt;&lt;/a&gt;3. 项目使用&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;修改源&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm &lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; registry http://0.0.0.0:4433&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;增加用户&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm adduser --registry http://0.0.0.0:4433&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Username:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Passwd:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Emial:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;发布包 和发布到npm仓库一样,登录,发布&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm login&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm publish&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;安装包&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install @xxx/yyy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;4-注&#34;&gt;&lt;a href=&#34;#4-注&#34; class=&#34;headerlink&#34; title=&#34;4. 注&#34;&gt;&lt;/a&gt;4. 注&lt;/h3&gt;&lt;p&gt;使用 &lt;code&gt;nrm&lt;/code&gt; 管理源 使用 nrm 增加源&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nrm add nl http://0.0.0.0:4433&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用 nrm 切换源&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nrm use nl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;浏览 nrm 源&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nrm ls&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2017/05/12/%E5%88%A9%E7%94%A8fs%E9%81%8D%E5%8E%86%E5%9B%BE%E7%89%87,%E4%BD%BF%E7%94%A8tinify%E5%8E%8B%E7%BC%A9/</guid>
            <title>利用fs遍历图片,使用tinify压缩</title>
            <link>http://qiubo.ink/2017/05/12/%E5%88%A9%E7%94%A8fs%E9%81%8D%E5%8E%86%E5%9B%BE%E7%89%87,%E4%BD%BF%E7%94%A8tinify%E5%8E%8B%E7%BC%A9/</link>
            <pubDate>Fri, 12 May 2017 17:47:57 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;gulp前端自动化中有压缩图片的工具gulp-imagemin等,但是压缩效果并不很理想,之前发现的tinypng.com网站提供许多压缩接口(puby,java,python,php,nodejs等)和插件(photo,wordpress等),当然这个是付费的.免费配额为500张图片&amp;#x2F;每月。个人觉得轻度使用是足够的。&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h4 id=&#34;1-官方站点提供了常规调用方法&#34;&gt;&lt;a href=&#34;#1-官方站点提供了常规调用方法&#34; class=&#34;headerlink&#34; title=&#34;1. 官方站点提供了常规调用方法&#34;&gt;&lt;/a&gt;1. 官方站点提供了常规调用方法&lt;/h4&gt;&lt;p&gt;安装:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install --save tinify&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var tinify = require(&amp;#x27;tinify&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tinify.key=&amp;#x27;your key &amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个是提供邮箱即可获得秘钥,在此我就不贴出来了,秘钥链接:&lt;a href=&#34;https://tinypng.com/developers&#34;&gt;https://tinypng.com/developers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;收到邮件后,点击即可获取(可能在垃圾邮件中)&lt;/p&gt;
&lt;p&gt;压缩操作:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var source = tinify.fromFile(&amp;quot;unoptimized.jpg&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;source.toFile(&amp;quot;optimized.jpg&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-利用fs获得文件数组&#34;&gt;&lt;a href=&#34;#2-利用fs获得文件数组&#34; class=&#34;headerlink&#34; title=&#34;2. 利用fs获得文件数组&#34;&gt;&lt;/a&gt;2. 利用fs获得文件数组&lt;/h4&gt;&lt;p&gt;但是,只提供一次操作一个文件,比较繁复.于是利用node自带的fs文件系统模块,获取到文件,并遍历操作&lt;/p&gt;
&lt;p&gt;fs.readdir() 异步获取&lt;br&gt;fs.readdirSync() 同步获取&lt;br&gt;该函数传参数为文件夹名,返回值均为文件名数组,因为在本地操作,而且是需要获取到图片后才操作,所以选择同步获取&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;fileNameArr = fs.readdirSync(&amp;#x27;img&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fileNameArr.forEach(function(fileName)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    source = tinify.fromFile(&amp;quot;img/&amp;quot;+fileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    source.toFile(&amp;quot;a/&amp;quot;+fileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就好了.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2016/12/26/linux%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85nodejs/</guid>
            <title>linux下配置安装nodejs</title>
            <link>http://qiubo.ink/2016/12/26/linux%E4%B8%8B%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85nodejs/</link>
            <category>linux</category>
            <category>nodejs</category>
            <category>虚拟主机</category>
            <pubDate>Mon, 26 Dec 2016 11:29:20 +0000</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;linux下配置安装nodejs&#34;&gt;&lt;a href=&#34;#linux下配置安装nodejs&#34; class=&#34;headerlink&#34; title=&#34;linux下配置安装nodejs&#34;&gt;&lt;/a&gt;linux下配置安装nodejs&lt;/h2&gt;&lt;p&gt;（非广告）virmach 美国VPS主机 &lt;code&gt;7.5刀/年&lt;/code&gt;（折合软妹币52.129；按软妹付款为54多）， 配置如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CPU&lt;/th&gt;
&lt;th&gt;RAM&lt;/th&gt;
&lt;th&gt;硬盘&lt;/th&gt;
&lt;th&gt;带宽&amp;#x2F;流量&lt;/th&gt;
&lt;th&gt;IP&lt;/th&gt;
&lt;th&gt;DDoS保护&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1核&lt;/td&gt;
&lt;td&gt;128M&lt;/td&gt;
&lt;td&gt;10G SSD&lt;/td&gt;
&lt;td&gt;1Gbps&amp;#x2F;250Gbp&lt;/td&gt;
&lt;td&gt;一个&lt;/td&gt;
&lt;td&gt;10Gbps&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;个人觉得还可以，就买了一个练习配置，因为内存不大，所以打算配置nodejs练练手，就当学习了。下边是linux配置，非购买使用流程。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据提供的IP:22使用putty链接&lt;/li&gt;
&lt;li&gt;用户名root 密码***** &lt;img src=&#34;http://xiaqiubo.top/wp-content/uploads/2017/02/virmach001-300x188.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;该主机自带了python2.7.3 &lt;img src=&#34;http://xiaqiubo.top/wp-content/uploads/2017/02/virmach002-300x42.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;于是安装node就省去了很大一步（注：还得在本地虚拟机从零测试安装） &lt;code&gt;cd /usr/local/&lt;/code&gt; 在这个文件夹下（当然哪个文件夹都可以），下载nodejs资源包 本来想服务器在国外，下载国外的node资源应该不错，&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;于是乎找到下载地址（官网的） &lt;a href=&#34;https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x86.tar.xz&#34;&gt;https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x86.tar.xz&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;运行 &lt;code&gt;wget --no-check-certificate https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-x86.tar.xz&lt;/code&gt; no-check-certificate是阻止wget下载前验证 下载成功 ，而且网速还不错&lt;br&gt;&lt;img src=&#34;http://xiaqiubo.top/wp-content/uploads/2017/02/virmach003-300x188.png&#34;&gt; &lt;/li&gt;
&lt;li&gt;解压 &lt;code&gt;tar node-v6.9.2-linux-x86.tar.xz&lt;/code&gt; (已解决使用xz命令解压缩  2016-12-26) 格式错误。于是只能拐回国内链接 &lt;/li&gt;
&lt;li&gt;同样运行 &lt;code&gt;wget --no-check-certificate https://nodejs.org/dist/v6.2.0/node-v6.2.0-linux-x86.tar.gz&lt;/code&gt;          &lt;br&gt;&lt;img src=&#34;http://xiaqiubo.top/wp-content/uploads/2017/02/virmach004-300x189.png&#34;&gt; 下载成功，网速依旧。&lt;/li&gt;
&lt;li&gt;解压 &lt;code&gt;tar node-v6.9.2-linux-x86.tar.xz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;解压文件包并重命名文件夹（详情搜索mv命令） &lt;code&gt;mv node-v6.9.2-linux-x86 node&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;配置临时环境变量 &lt;code&gt;export PATH=/usr/local/python/bin:/usr/local/node/bin:$PATH&lt;/code&gt; 该环境变量为临时变量，关闭ssh窗口即失效 所以需要配置永久环境变量，修改etc&amp;#x2F;profile文件&lt;/li&gt;
&lt;li&gt;编辑添加全局环境变量 &lt;code&gt;vim /etc/profile&lt;/code&gt;&lt;br&gt;   &lt;img src=&#34;http://xiaqiubo.top/wp-content/uploads/2017/02/virmach005-300x188.png&#34;&gt; 增加变量路径 &lt;code&gt;:wq&lt;/code&gt;保存退出&lt;/li&gt;
&lt;li&gt;node环境配置成功&lt;br&gt;   &lt;img src=&#34;http://xiaqiubo.top/wp-content/uploads/2017/02/virmach006-300x48.png&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;剩下的后期继续更新。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://qiubo.ink/2016/12/08/gulp%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
            <title>gulp初体验</title>
            <link>http://qiubo.ink/2016/12/08/gulp%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
            <category>nodejs</category>
            <category>gulp</category>
            <category>前端自动化</category>
            <pubDate>Thu, 08 Dec 2016 12:09:12 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;在云IDEcloud9中体验测试了gulp&lt;/p&gt;
&lt;h4 id=&#34;1-首先npm-install-gulp-g&#34;&gt;&lt;a href=&#34;#1-首先npm-install-gulp-g&#34; class=&#34;headerlink&#34; title=&#34;1. 首先npm install gulp -g&#34;&gt;&lt;/a&gt;1. 首先npm install gulp -g&lt;/h4&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install gulp --save-dev 全局和项目安装gulp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;2-测试项目为压缩文件和修改文件名称&#34;&gt;&lt;a href=&#34;#2-测试项目为压缩文件和修改文件名称&#34; class=&#34;headerlink&#34; title=&#34;2. 测试项目为压缩文件和修改文件名称&#34;&gt;&lt;/a&gt;2. 测试项目为压缩文件和修改文件名称&lt;/h4&gt;&lt;p&gt;安装gulp依赖项&lt;/p&gt;
&lt;p&gt;| 名称 | 含义 |&lt;br&gt;|gulp-minify|压缩css文件|&lt;br&gt;|gulp-uglify|压缩js文件|&lt;br&gt;|gulp-concat|合并文件|&lt;br&gt;|gulp-rename|修改文件或文件夹名称|&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install gulp-minify --save-dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;3-创建gulpfile-js文件&#34;&gt;&lt;a href=&#34;#3-创建gulpfile-js文件&#34; class=&#34;headerlink&#34; title=&#34;3. 创建gulpfile.js文件&#34;&gt;&lt;/a&gt;3. 创建gulpfile.js文件&lt;/h4&gt;&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var gulp = require(&amp;#x27;gulp&amp;#x27;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    minify = require(&amp;#x27;gulp-minify&amp;#x27;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    uglify = require(&amp;#x27;gulp-uglify&amp;#x27;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    concat = require(&amp;#x27;gulp-concat&amp;#x27;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rename = require(&amp;#x27;gulp-rename&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;//获取每个组件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; gulp.task(&amp;#x27;taskName&amp;#x27;,function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return gulp.src(&amp;#x27;./dst/js/*.js&amp;#x27;)               //返回任务操作路径和文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .pipe(concat(&amp;#x27;functions.js&amp;#x27;))              //合并所有的js文件为functions.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .pipe(gulp.dest(&amp;#x27;./src/js/&amp;#x27;))              //输出functions.js文件到根目录下src下js文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .pipe(uglify())                            //压缩该文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .pipe(rename(&amp;#123;extname:&amp;#x27;.min.js&amp;#x27;&amp;#125;))         //对压缩后的文件进行重命名，修改文件后缀为.min.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .pipe(gulp.dest(&amp;#x27;./src/js/&amp;#x27;));             //输出到与未压缩同目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;);//新建一个名字叫taskName的任务&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;4-文件内容详解：&#34;&gt;&lt;a href=&#34;#4-文件内容详解：&#34; class=&#34;headerlink&#34; title=&#34;4. 文件内容详解：&#34;&gt;&lt;/a&gt;4. 文件内容详解：&lt;/h4&gt;&lt;h5 id=&#34;require-函数：&#34;&gt;&lt;a href=&#34;#require-函数：&#34; class=&#34;headerlink&#34; title=&#34;require()函数：&#34;&gt;&lt;/a&gt;require()函数：&lt;/h5&gt;&lt;p&gt;参数为string&lt;br&gt;&lt;strong&gt;1. 如果string为内置模块&lt;/strong&gt;&lt;br&gt;        返回该模块 不再继续执行&lt;br&gt;&lt;strong&gt;2. 如果string以文件路径形式（如：’.&amp;#x2F;X’、’..&amp;#x2F;X’ 、’&amp;#x2F;X’）&lt;/strong&gt;&lt;br&gt;        根据 X 所在的父模块，确定 X 的绝对路径。 将 X 当成文件，依次查找名称为X的文件，只要其中有一个存在，就返回该文件，不再继续执行。 X X.js X.json X.node 将 X 当成目录，依次查找下面文件，只要其中有一个存在，就返回该文件，不再继续执行。 X&amp;#x2F;package.json X&amp;#x2F;index.js X&amp;#x2F;index.json X&amp;#x2F;index.node&lt;br&gt;&lt;strong&gt;3. 如果string不带路径&lt;/strong&gt;&lt;br&gt;        根据 X 所在的父模块，确定 X 可能的安装目录。 依次在每个目录中，将 X 当成文件名或目录名加载。&lt;br&gt;        &lt;a href=&#34;http://www.ruanyifeng.com/blog/2015/05/require.html&#34;&gt;参考文章1&lt;/a&gt;&lt;br&gt;        &lt;a href=&#34;http://www.jdon.com/idea/nodejs/how-require-actually-works.html&#34;&gt;参考文章2&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;gulp-task&#34;&gt;&lt;a href=&#34;#gulp-task&#34; class=&#34;headerlink&#34; title=&#34;gulp.task()&#34;&gt;&lt;/a&gt;gulp.task()&lt;/h5&gt;&lt;p&gt;用于创建gulp任务，默认任务名称为&lt;code&gt;default task(&amp;#39;a&amp;#39;,b)&lt;/code&gt;; 参数a：指定任务名称 参数b：匿名函数 执行任务时运行 gulp a（默认任务名直接执行 gulp 即可）&lt;/p&gt;
&lt;h5 id=&#34;gulp-src&#34;&gt;&lt;a href=&#34;#gulp-src&#34; class=&#34;headerlink&#34; title=&#34;gulp.src()&#34;&gt;&lt;/a&gt;gulp.src()&lt;/h5&gt;&lt;pre&gt;&lt;code&gt;    `gulp.src(globs[, options])`
    1. `globs` 参数是文件匹配模式(类似正则表达式)，用来匹配文件路径(包括文件名)，当然这里也可以直接指定某个具体的文件路径。当有多个匹配模式时，该参数可以为一个数组。
    2. `options` 为可选参数。通常情况下我们不需要用到。
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;pipe&#34;&gt;&lt;a href=&#34;#pipe&#34; class=&#34;headerlink&#34; title=&#34;pipe()&#34;&gt;&lt;/a&gt;pipe()&lt;/h5&gt;&lt;p&gt;&lt;code&gt;node.js&lt;/code&gt; 中 &lt;code&gt;stream&lt;/code&gt;（流）的指示方向&lt;/p&gt;
&lt;h5 id=&#34;gulp-dest&#34;&gt;&lt;a href=&#34;#gulp-dest&#34; class=&#34;headerlink&#34; title=&#34;gulp.dest()&#34;&gt;&lt;/a&gt;gulp.dest()&lt;/h5&gt;&lt;p&gt;&lt;code&gt;gulp.dest()&lt;/code&gt; 方法是用来写文件的，其语法为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    `gulp.dest(path[,options])`
    1. path为写入文件的路径
    2. options为一个可选的参数对象，通常我们不需要用到
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;concat&#34;&gt;&lt;a href=&#34;#concat&#34; class=&#34;headerlink&#34; title=&#34;concat()&#34;&gt;&lt;/a&gt;concat()&lt;/h5&gt;&lt;p&gt;合并文件，指定参数为合并后的文件名称&lt;/p&gt;
&lt;h5 id=&#34;uglify&#34;&gt;&lt;a href=&#34;#uglify&#34; class=&#34;headerlink&#34; title=&#34;uglify()&#34;&gt;&lt;/a&gt;uglify()&lt;/h5&gt;&lt;p&gt;压缩文件，没有制定参数，直接压缩js文件&lt;/p&gt;
&lt;h5 id=&#34;rename&#34;&gt;&lt;a href=&#34;#rename&#34; class=&#34;headerlink&#34; title=&#34;rename()&#34;&gt;&lt;/a&gt;rename()&lt;/h5&gt;&lt;p&gt;参数为数组，&lt;code&gt;basename&lt;/code&gt;、&lt;code&gt;prefix/suffix&lt;/code&gt;、&lt;code&gt;extname&lt;/code&gt;、&lt;code&gt;dirname&lt;/code&gt; 常用：prefix: ‘pre-‘ 增加前缀pre- suffix: ‘-suf’ 增加后缀，不改变文件性质 extname:’.min.js’ 修改文件后缀 &lt;a href=&#34;http://www.cnblogs.com/2050/p/4198792.html&#34;&gt;参考文章3&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
