{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"技巧\" category",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2017/05/12/%E5%88%A9%E7%94%A8fs%E9%81%8D%E5%8E%86%E5%9B%BE%E7%89%87,%E4%BD%BF%E7%94%A8tinify%E5%8E%8B%E7%BC%A9/",
            "url": "http://qiubo.ink/2017/05/12/%E5%88%A9%E7%94%A8fs%E9%81%8D%E5%8E%86%E5%9B%BE%E7%89%87,%E4%BD%BF%E7%94%A8tinify%E5%8E%8B%E7%BC%A9/",
            "title": "利用fs遍历图片,使用tinify压缩",
            "date_published": "2017-05-12T17:47:57.000Z",
            "content_html": "<p>gulp前端自动化中有压缩图片的工具gulp-imagemin等,但是压缩效果并不很理想,之前发现的tinypng.com网站提供许多压缩接口(puby,java,python,php,nodejs等)和插件(photo,wordpress等),当然这个是付费的.免费配额为500张图片&#x2F;每月。个人觉得轻度使用是足够的。</p>\n<span id=\"more\"></span>\n\n<h4 id=\"1-官方站点提供了常规调用方法\"><a href=\"#1-官方站点提供了常规调用方法\" class=\"headerlink\" title=\"1. 官方站点提供了常规调用方法\"></a>1. 官方站点提供了常规调用方法</h4><p>安装:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save tinify</span><br></pre></td></tr></table></figure>\n<p>调用:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var tinify = require(&#x27;tinify&#x27;);</span><br><span class=\"line\">tinify.key=&#x27;your key &#x27;;</span><br></pre></td></tr></table></figure>\n<p>这个是提供邮箱即可获得秘钥,在此我就不贴出来了,秘钥链接:<a href=\"https://tinypng.com/developers\">https://tinypng.com/developers</a></p>\n<p>收到邮件后,点击即可获取(可能在垃圾邮件中)</p>\n<p>压缩操作:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var source = tinify.fromFile(&quot;unoptimized.jpg&quot;);</span><br><span class=\"line\">source.toFile(&quot;optimized.jpg&quot;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-利用fs获得文件数组\"><a href=\"#2-利用fs获得文件数组\" class=\"headerlink\" title=\"2. 利用fs获得文件数组\"></a>2. 利用fs获得文件数组</h4><p>但是,只提供一次操作一个文件,比较繁复.于是利用node自带的fs文件系统模块,获取到文件,并遍历操作</p>\n<p>fs.readdir() 异步获取<br>fs.readdirSync() 同步获取<br>该函数传参数为文件夹名,返回值均为文件名数组,因为在本地操作,而且是需要获取到图片后才操作,所以选择同步获取</p>\n<p>代码如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fileNameArr = fs.readdirSync(&#x27;img&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">fileNameArr.forEach(function(fileName)&#123;</span><br><span class=\"line\">    source = tinify.fromFile(&quot;img/&quot;+fileName);</span><br><span class=\"line\">    source.toFile(&quot;a/&quot;+fileName);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>这样就好了.</p>\n",
            "tags": []
        }
    ]
}