{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"教程\" category",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2019/03/19/Go%20module%E7%A7%81%E6%9C%8D/",
            "url": "http://qiubo.ink/2019/03/19/Go%20module%E7%A7%81%E6%9C%8D/",
            "title": "Go module 私服",
            "date_published": "2019-03-19T17:00:43.000Z",
            "content_html": "<p>golang 1.11.0 之后 <code>go</code> 提供 mod 内置包管理工具</p>\n<p>但是实际应用时，由于网络等原因造成请求部分网站托管模块时无法响应，导致无法使用，使用ss代理有时又会产生新的问题， 又或者由于依赖过多，致使go mod 网络处理时长过久等原因，于是便有了go mod 私服项目 <a href=\"https://github.com/gomods/athens\">Athens</a></p>\n<span id=\"more\"></span>\n\n<h4 id=\"1-背景\"><a href=\"#1-背景\" class=\"headerlink\" title=\"1. 背景\"></a>1. 背景</h4><p>golang 1.11.0 之后 <code>go</code> 提供 mod 内置包管理工具</p>\n<p>但是实际应用时，由于网络等原因造成请求部分网站托管模块时无法响应，导致无法使用，使用ss代理有时又会产生新的问题， 又或者由于依赖过多，致使go mod 网络处理时长过久等原因，于是便有了go mod 私服项目 <a href=\"https://github.com/gomods/athens\">Athens</a></p>\n<h4 id=\"2-服务部署\"><a href=\"#2-服务部署\" class=\"headerlink\" title=\"2. 服务部署\"></a>2. 服务部署</h4><ul>\n<li>拉取代码</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># progromeRoot</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/gomods/athens</span><br><span class=\"line\"><span class=\"built_in\">cd</span> athens/cmd/proxy</span><br><span class=\"line\">go install</span><br></pre></td></tr></table></figure>\n<ul>\n<li>检查安装</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$GOPATH</span>/bin/proxy version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>部署 使用任何常用的进程守护工具均可，此处 pm2 实例</li>\n</ul>\n<h6 id=\"默认配置文件端口为3000-3001-有冲突修改配置文件\"><a href=\"#默认配置文件端口为3000-3001-有冲突修改配置文件\" class=\"headerlink\" title=\"默认配置文件端口为3000&#x2F;3001 有冲突修改配置文件\"></a>默认配置文件端口为3000&#x2F;3001 有冲突修改配置文件</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pm2 start ./proxy -- -config_file=progromeRoot/config.dev.toml</span><br></pre></td></tr></table></figure>\n<ul>\n<li>(可选)配置nginx 代理</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 简单配置</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name your.domain.com;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_pass http://127.0.0.1:3000;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-本地使用\"><a href=\"#3-本地使用\" class=\"headerlink\" title=\"3. 本地使用\"></a>3. 本地使用</h4><p>服务配置完成后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">host: http://your.domain.com</span><br><span class=\"line\">port: 80</span><br></pre></td></tr></table></figure>\n<p>修改本地环境变量</p>\n<h6 id=\"go-mod-go-get-使用的代理\"><a href=\"#go-mod-go-get-使用的代理\" class=\"headerlink\" title=\"go mod &#x2F;go get 使用的代理\"></a>go mod &#x2F;go get 使用的代理</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GOPROXY=http://your.domian.com</span><br></pre></td></tr></table></figure>\n<h6 id=\"不需要使用代理的域名\"><a href=\"#不需要使用代理的域名\" class=\"headerlink\" title=\"不需要使用代理的域名\"></a>不需要使用代理的域名</h6><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> NO_PROXY=github.com,<span class=\"variable\">$NO_PROXY</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-小结\"><a href=\"#4-小结\" class=\"headerlink\" title=\"4. 小结\"></a>4. 小结</h4><p>此文是go mod 私服配置简版，该项目支持模块缓存，默认是使用内存，有兴趣的可以自行研究配置</p>\n",
            "tags": [
                "golang",
                "mod",
                "module",
                "私服"
            ]
        },
        {
            "id": "http://qiubo.ink/2018/09/14/%E4%BD%BF%E7%94%A8nodejs%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/",
            "url": "http://qiubo.ink/2018/09/14/%E4%BD%BF%E7%94%A8nodejs%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/",
            "title": "使用nodejs创建自己的自动化工具",
            "date_published": "2018-09-14T12:00:07.000Z",
            "content_html": "<p>nodejs能方便的进行前端的文件压缩结合等等,自动化操作,但是经常使用的我们,是不是也能方便的建立自己的自动化部署工具呢?比如:经常从头建立的文件夹模式,千篇一律的index.html等等</p>\n<span id=\"more\"></span>\n<h3 id=\"开发步骤\"><a href=\"#开发步骤\" class=\"headerlink\" title=\"开发步骤\"></a>开发步骤</h3><h6 id=\"1-安装nodejs环境\"><a href=\"#1-安装nodejs环境\" class=\"headerlink\" title=\"1. 安装nodejs环境\"></a>1. 安装nodejs环境</h6><p>从<a href=\"https://nodejs.org/\">官网</a>或<a href=\"https://nodejs.cn/\">中文官网</a>下载nodejs的安装包,参照网上的安装方法安装好nodejs环境,</p>\n<p>此处不是介绍nodejs,,因此不介绍如何安装</p>\n<h6 id=\"2-创建项目\"><a href=\"#2-创建项目\" class=\"headerlink\" title=\"2. 创建项目\"></a>2. 创建项目</h6><p>创建项目文件夹,进入并执行npm init,如下图 <a href=\"https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/01.png\"><img src=\"https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/01.png\"></a></p>\n<p>如下信息是需要填写的 :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package name: (jiaocheng)</span><br><span class=\"line\">version: (1.0.0) 0.1.0</span><br><span class=\"line\">description: 自制自动化工具</span><br><span class=\"line\">entry point: (index.js)</span><br><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"built_in\">command</span>:</span><br><span class=\"line\">git repository:</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">author: xiaoxia</span><br><span class=\"line\">license: (ISC)</span><br></pre></td></tr></table></figure>\n<p>在最后生成的package.json中增加一项</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">  <span class=\"string\">&quot;bin&quot;</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;jiaocheng&quot;</span>:<span class=\"string\">&quot;index.js&quot;</span>\t</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// ...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>bin为可执行命令,<code>jiaocheng</code>为执行命令,<code>index.js</code>为命令执行文件入口</p>\n<p>然后执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"built_in\">link</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/04.png\"><img src=\"https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/04.png\"></a>此命令向系统增加一条软连接(可以理解为快捷方式)引用,方便使用当前项目的 bin 命令(便于本地调试)</p>\n<h6 id=\"3-创建index-js-入口文件\"><a href=\"#3-创建index-js-入口文件\" class=\"headerlink\" title=\"3. 创建index.js,入口文件\"></a>3. 创建index.js,入口文件</h6><p>一定要在顶部加上 <code>#!/usr/bin/env node</code> 声明,该文件使用环境变量 node 调用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>如图 :</p>\n<p><a href=\"https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/02.png\"><img src=\"https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/02.png\"></a></p>\n<p>然后打开cmd窗口,输入 <code>jiaocheng</code> 回车,输出如下图</p>\n<p><a href=\"https://github.com/xiaqiubo/nodejs-traning/blob/master/course/imgs/20171031/03.png\"><img src=\"https://github.com/xiaqiubo/nodejs-traning/raw/master/course/imgs/20171031/03.png\"></a></p>\n<h6 id=\"4-项目依赖选择\"><a href=\"#4-项目依赖选择\" class=\"headerlink\" title=\"4. 项目依赖选择\"></a>4. 项目依赖选择</h6><p>此时已经基本成型了,你可以执行命令做一些你想做的事情,也可以自己处理一些 process 变量</p>\n<p>常用的nodejs自带 process属性</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.argv\t\t<span class=\"comment\"># \t获取传入参数</span></span><br><span class=\"line\">process.cwd()\t\t<span class=\"comment\">#\t获取当前命令执行所在目录</span></span><br><span class=\"line\">process.env\t\t\t<span class=\"comment\">#\t获取当前系统用户的环境变量</span></span><br><span class=\"line\">process.pid\t\t\t<span class=\"comment\">#\t获取当前进程的pid</span></span><br><span class=\"line\">process.platform\t<span class=\"comment\">#\t获取当前运行的平台(系统)</span></span><br><span class=\"line\">process.stdin\t\t<span class=\"comment\">#\t输入</span></span><br><span class=\"line\">process.stdout\t\t<span class=\"comment\"># \t输出</span></span><br><span class=\"line\">process.versions\t<span class=\"comment\">#\t当前nodejs环境所有版本信息</span></span><br></pre></td></tr></table></figure>\n<p>常用模块推荐 (持续更新中):</p>\n<p>commander \t#\t作者Tj用于自动生成命令参数获取,单包无依赖</p>\n<p>commander 链接及使用看<a href=\"https://npmjs.com/package/commander\">npmjs</a>介绍或者<a href=\"https://github.com/tj/commander.js\">github</a>介绍即可</p>\n<h3 id=\"模块发布\"><a href=\"#模块发布\" class=\"headerlink\" title=\"模块发布\"></a>模块发布</h3><hr>\n<h6 id=\"5-注册npmjs账号\"><a href=\"#5-注册npmjs账号\" class=\"headerlink\" title=\"5. 注册npmjs账号\"></a>5. 注册npmjs账号</h6><p>到<a href=\"https://www.npmjs.com/signup\">npmjs官网注册</a>一个npmjs账号,用于发布自己的模块</p>\n<h6 id=\"6-登录npmjs并发布自己的模块\"><a href=\"#6-登录npmjs并发布自己的模块\" class=\"headerlink\" title=\"6. 登录npmjs并发布自己的模块\"></a>6. 登录npmjs并发布自己的模块</h6><p>模块按照上面的步骤开发,注册过账号后就可以发布自己的模块了,此处的登录不是在网页上的登录,而是在命令行下执行:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm login</span><br></pre></td></tr></table></figure>\n<p>会提示输入账号密码,输入注册的账号密码即可</p>\n<p>登录成功后,到项目目录下,执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm publish</span><br></pre></td></tr></table></figure>\n<p>片刻后便会执行成功</p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li>部分开发者习惯将npm镜像修改为国内的cnpm.js淘宝镜像,在发布包的时候记得将镜像切换回官方 <a href=\"https://registry.npmjs.org/\">https://registry.npmjs.org/</a></li>\n</ol>\n<p>可以执行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config list</span><br></pre></td></tr></table></figure>\n<p>查看是否替换</p>\n<ol start=\"2\">\n<li>发布的npm模块名称必须为全小写,不支持大小驼峰名称,一般修改为英文中横线</li>\n</ol>\n",
            "tags": [
                "nodejs",
                "cli"
            ]
        },
        {
            "id": "http://qiubo.ink/2017/05/12/mysql%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%8F%8A%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/",
            "url": "http://qiubo.ink/2017/05/12/mysql%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7%E5%8F%8A%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/",
            "title": "mysql创建用户及权限设置",
            "date_published": "2017-05-12T17:46:19.000Z",
            "content_html": "<h4 id=\"1-grant\"><a href=\"#1-grant\" class=\"headerlink\" title=\"1. grant\"></a>1. grant</h4><p>查看用户权限:</p>\n<ol>\n<li><p><code>show grants;</code> &#x2F;&#x2F; 查看当前用户权限</p>\n</li>\n<li><p><code>show grants for username@localhost;</code> &#x2F;&#x2F; 查看已知用户权限</p>\n</li>\n</ol>\n<h6 id=\"普通权限\"><a href=\"#普通权限\" class=\"headerlink\" title=\"普通权限:\"></a>普通权限:</h6><p>grant 权限 on 数据库对象 to 用户@访问地址 by密码</p>\n<p>权限:<br>    1. select<br>    2. instert<br>    3. update<br>    4. delete</p>\n<h6 id=\"数据库操作权限\"><a href=\"#数据库操作权限\" class=\"headerlink\" title=\"数据库操作权限\"></a>数据库操作权限</h6><p>grant 创建、修改、删除 MySQL 数据表结构权限。</p>\n<p>权限;<br>    1. create<br>    2. alter<br>    3. drop<br>    4. references<br>    5. index</p>\n<h6 id=\"常见数据库命令操作\"><a href=\"#常见数据库命令操作\" class=\"headerlink\" title=\"常见数据库命令操作\"></a>常见数据库命令操作</h6><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. grant all on *.* to username@&quot;%&quot; by password</span><br><span class=\"line\">2. flush privileges</span><br></pre></td></tr></table></figure>\n<p>创建远程连接的用户,可以访问操作所有数据库</p>\n<p>去除已设定的权限:</p>\n<ol>\n<li><p>在mysql下的user表中去除或更新表内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; use mysql;  </span><br><span class=\"line\">&gt; select user,host from user;  </span><br><span class=\"line\">&gt; delete from user where user=&quot;username&quot; and host=&quot;localhost&quot;;  </span><br><span class=\"line\">&gt; update user set host=&quot;&quot; where user=&quot;username&quot;;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>revoke</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; revoke all on _._ from username@localhost;</span><br></pre></td></tr></table></figure></li>\n</ol>\n",
            "tags": [
                "mysql"
            ]
        }
    ]
}