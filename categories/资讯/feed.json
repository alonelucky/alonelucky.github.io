{
    "version": "https://jsonfeed.org/version/1",
    "title": "小码农博客 • All posts by \"资讯\" category",
    "description": null,
    "home_page_url": "http://qiubo.ink",
    "items": [
        {
            "id": "http://qiubo.ink/2023/03/16/Nodejs-v19-x-%E6%94%AF%E6%8C%81%E6%89%93%E5%8C%85%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%8D%95%E6%96%87%E4%BB%B6/",
            "url": "http://qiubo.ink/2023/03/16/Nodejs-v19-x-%E6%94%AF%E6%8C%81%E6%89%93%E5%8C%85%E5%8F%AF%E6%89%A7%E8%A1%8C%E5%8D%95%E6%96%87%E4%BB%B6/",
            "title": "Nodejs v19.x 支持打包可执行单文件",
            "date_published": "2023-03-16T10:45:34.000Z",
            "content_html": "<p>官方文档：<a href=\"https://nodejs.org/dist/latest-v19.x/docs/api/single-executable-applications.html\">Single executable applications</a></p>\n<span id=\"more\"></span>\n\n<h2 id=\"特性介绍：\"><a href=\"#特性介绍：\" class=\"headerlink\" title=\"特性介绍：\"></a>特性介绍：</h2><p>有的语言原生工具链就支持打包单独可执行文件，如：<code>go build</code> <code>dart complite exe</code></p>\n<p>有的有社区解决方案，如：<code>PyInstaller</code> nodejs社区的：<a href=\"https://github.com/vercel/ncc\"><code>ncc</code></a>&#x2F;<a href=\"https://github.com/vercel/pkg\"><code>pkg</code></a></p>\n<p>如今，nodejs 在 v19.x 引入实验性单独可执行文件，提供了官方打包工具链。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>基础环境：安装 Nodejs v19.x 及以上，只有最新版本支持</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#  1.创建 js 文件</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;console.log(`Hello, $&#123;process.argv[2]&#125;!`);&#x27;</span> &gt; hello.js</span><br><span class=\"line\"><span class=\"comment\"># 2. 复制当前版本的 node 二进制文件到当前目录，并重命名为想要的二进制名称</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> $(<span class=\"built_in\">which</span> node) hello</span><br><span class=\"line\"><span class=\"comment\"># 3. 进行打包</span></span><br><span class=\"line\">npx postject hello NODE_JS_CODE hello.js \\</span><br><span class=\"line\">    --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \\</span><br><span class=\"line\">    --macho-segment-name NODE_JS <span class=\"comment\"># 最后一行只有 macos 需要</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 运行可执行文件</span></span><br><span class=\"line\">./hello world</span><br><span class=\"line\">Hello, world!</span><br></pre></td></tr></table></figure>\n<p>以上是官方示例，通过第三步可以看出，实际上是 <a href=\"https://github.com/nodejs/postject\"><code>postject</code></a> 在起作用, 可以自行安装使用</p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p>目前只能打包一个 js 文件， 与 pkg 是打包一整个文件夹不同，是否就不能应用了呢？顺势可以想到把整个项目打包为单独的 js 文件不就解决了这个问题了吗？这便是 ncc（Compile a Node.js project into a single file. Supports TypeScript, binary addons, dynamic requires.）, 尝试一下。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> singleapp</span><br><span class=\"line\"><span class=\"comment\"># 初始化项目</span></span><br><span class=\"line\">npm init</span><br><span class=\"line\"><span class=\"comment\"># 安装依赖</span></span><br><span class=\"line\">npm i -S express</span><br><span class=\"line\"><span class=\"comment\"># ...创建多文件文件夹及相互依赖</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用 ncc 打包单文件， dist/index.js</span></span><br><span class=\"line\">ncc build app.js -o dist</span><br><span class=\"line\"><span class=\"comment\"># 复制当前版本的 node 二进制文件到当前目录，并重命名为想要的二进制名称</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> $(<span class=\"built_in\">which</span> node) singleapp</span><br><span class=\"line\"><span class=\"comment\"># 3. 进行打包</span></span><br><span class=\"line\">npx postject singleapp NODE_JS_CODE dist/index.js \\</span><br><span class=\"line\">    --sentinel-fuse NODE_JS_FUSE_fce680ab2cc467b6e072b8b5df1996b2 \\</span><br><span class=\"line\">    --macho-segment-name NODE_JS <span class=\"comment\"># 最后一行只有 macos 需要</span></span><br><span class=\"line\"><span class=\"comment\"># 4. 运行可执行文件</span></span><br><span class=\"line\">./singleapp</span><br><span class=\"line\">server is running at 127.0.0.1:3000</span><br></pre></td></tr></table></figure>\n<p>由于打包了 nodevm 所以生成的二进制文件会比较大，单文件打包结果是 83Mb，但是 node 二进制原包是 90MB，应该是有压缩，可以使用 <code>upx</code> 进行二进制加壳压缩。</p>\n<h2 id=\"结言\"><a href=\"#结言\" class=\"headerlink\" title=\"结言\"></a>结言</h2><p>Nodejs 多年呼吁的打包功能官方终于开始启动了，还有一些瑕疵，而且实验性功能改动到后边会比较大，可以多多跟进，目前的官方讨论区在</p>\n<ul>\n<li><a href=\"https://github.com/nodejs/single-executable/discussions\">讨论区</a></li>\n<li><a href=\"https://github.com/nodejs/node/issues/43432\">Initiative: Single Executable Application #43432</a></li>\n</ul>\n<p>以前社区百花齐放提供了很多的打包方案，<code>pkg</code>, <code>jsexe</code>, <code>ncc</code>, <code>bytecode</code> 等等，其实 <code>webpack</code> 这些也是可以支持后端项目打包的，也可以打包合并为单独 js 文件，复用 js 打包生态，源码混淆，sourcemap 支持等等</p>\n",
            "tags": [
                "nodejs"
            ]
        }
    ]
}